{"name":"c++","slug":"c","count":35,"postlist":[{"title":"【转载】Qt开发经验-飞扬青云","uid":"d2b5059492d6e2887d56c31f82cb8443","slug":"转载/Qt/Qt开发经验","date":"2023-05-08T02:27:52.000Z","updated":"2023-05-19T05:34:21.025Z","comments":true,"path":"api/articles/转载/Qt/Qt开发经验.json","keywords":null,"cover":null,"text":"原文地址：https://gitee.com/feiyangqingyun/qtkaifajingyan 1 开发经验01：001-010 当编译发现大量错误的...","permalink":"/post/转载/Qt/Qt开发经验","photos":[],"count_time":{"symbolsCount":"181k","symbolsTime":"2:44"},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"Qt","slug":"Qt","count":59,"path":"api/tags/Qt.json"},{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"开源项目推荐","uid":"3ab7f0783815eb0913f3bccc1c62e62d","slug":"开源项目/开源项目推荐","date":"2023-05-08T02:27:52.000Z","updated":"2023-05-19T05:34:20.887Z","comments":true,"path":"api/articles/开源项目/开源项目推荐.json","keywords":null,"cover":null,"text":"Qt开源项目推荐排名不分先后 QWidgetDemo 作者：飞扬青云 项目简介：Qt编写的一些开源的demo，支持Qt4、Qt5、Qt6，支持任意系统，预计会有...","permalink":"/post/开源项目/开源项目推荐","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"开源项目","slug":"开源项目","count":1,"path":"api/categories/开源项目.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】高性能服务器架构设计总结","uid":"10a9cf5937dc7bc9f3410b780f114a73","slug":"转载/高性能服务器框架设计/高性能服务器架构设计总结","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.407Z","comments":true,"path":"api/articles/转载/高性能服务器框架设计/高性能服务器架构设计总结.json","keywords":null,"cover":[],"text":"高性能服务器架构设计总结系列目录 第01篇 主线程与工作线程的分工 第02篇 Reactor模式 第03篇 一个服务器程序的架构介绍 第04篇 如何将socke...","permalink":"/post/转载/高性能服务器框架设计/高性能服务器架构设计总结","photos":[],"count_time":{"symbolsCount":"62k","symbolsTime":"57 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"高性能服务器框架设计","slug":"高性能服务器框架设计","count":10,"path":"api/tags/高性能服务器框架设计.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】错误码系统的设计","uid":"244b4809351f4fc8c6cac7d22fa4014d","slug":"转载/高性能服务器框架设计/错误码系统的设计","date":"2021-05-06T09:27:48.000Z","updated":"2024-11-11T08:31:26.887Z","comments":true,"path":"api/articles/转载/高性能服务器框架设计/错误码系统的设计.json","keywords":null,"cover":[],"text":"错误码系统的设计 本文介绍服务器开发中一组服务中错误码系统的设计理念与实践，如果读者从来没想过或者没接触过这种设计理念，建议认真体会一下这种设计思路的优点。 错...","permalink":"/post/转载/高性能服务器框架设计/错误码系统的设计","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"高性能服务器框架设计","slug":"高性能服务器框架设计","count":10,"path":"api/tags/高性能服务器框架设计.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】日志系统的设计","uid":"ce0a6a8a156c3a000bce90a0bc7659bd","slug":"转载/高性能服务器框架设计/日志系统的设计","date":"2021-05-06T09:27:48.000Z","updated":"2024-11-11T08:31:26.888Z","comments":true,"path":"api/articles/转载/高性能服务器框架设计/日志系统的设计.json","keywords":null,"cover":[],"text":"日志系统的设计为什么需要日志实际的软件项目产出都有一个流程，即先开发、测试，再发布生产，由于人的因素，既然是软件产品就不可能百分百没有 bug 或者逻辑错误，对...","permalink":"/post/转载/高性能服务器框架设计/日志系统的设计","photos":[],"count_time":{"symbolsCount":"32k","symbolsTime":"29 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"高性能服务器框架设计","slug":"高性能服务器框架设计","count":10,"path":"api/tags/高性能服务器框架设计.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】心跳包机制设计详解","uid":"dadb03aa4cb6e4085adc0ea3361dcdbd","slug":"转载/高性能服务器框架设计/心跳包机制设计详解","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.405Z","comments":true,"path":"api/articles/转载/高性能服务器框架设计/心跳包机制设计详解.json","keywords":null,"cover":null,"text":"心跳包机制设计详解存在下面两种情形： 情形一：一个客户端连接服务器以后，如果长期没有和服务器有数据来往，可能会被防火墙程序关闭连接，有时候我们并不想要被关闭连接...","permalink":"/post/转载/高性能服务器框架设计/心跳包机制设计详解","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"10 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"高性能服务器框架设计","slug":"高性能服务器框架设计","count":10,"path":"api/tags/高性能服务器框架设计.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】实例：一个服务器程序的架构介绍","uid":"109d28235b9c7b6892c4c14f9b41b157","slug":"转载/高性能服务器框架设计/实例：一个服务器程序的架构介绍","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.405Z","comments":true,"path":"api/articles/转载/高性能服务器框架设计/实例：一个服务器程序的架构介绍.json","keywords":null,"cover":null,"text":"实例：一个服务器程序的架构介绍本文将介绍我曾经做过的一个项目的服务器架构和服务器编程的一些重要细节。 一、程序运行环境操作系统：Centos 7.0 编译器：g...","permalink":"/post/转载/高性能服务器框架设计/实例：一个服务器程序的架构介绍","photos":[],"count_time":{"symbolsCount":"8.6k","symbolsTime":"8 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"高性能服务器框架设计","slug":"高性能服务器框架设计","count":10,"path":"api/tags/高性能服务器框架设计.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】如何设计断线自动重连机制","uid":"f6cf431fde3fe424d56db6051dddeb05","slug":"转载/高性能服务器框架设计/如何设计断线自动重连机制","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.404Z","comments":true,"path":"api/articles/转载/高性能服务器框架设计/如何设计断线自动重连机制.json","keywords":null,"cover":[],"text":"如何设计断线自动重连机制在有连接依赖关系的服务与服务之间，或客户端与服务器之间，无论是出于方便使用、降低运维成本、提高工作效率（服务与服务之间），还是优化用户体...","permalink":"/post/转载/高性能服务器框架设计/如何设计断线自动重连机制","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"高性能服务器框架设计","slug":"高性能服务器框架设计","count":10,"path":"api/tags/高性能服务器框架设计.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】主线程与工作线程的分工","uid":"429b34147de6862baa596a57a6482f88","slug":"转载/高性能服务器框架设计/主线程与工作线程的分工","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.403Z","comments":true,"path":"api/articles/转载/高性能服务器框架设计/主线程与工作线程的分工.json","keywords":null,"cover":null,"text":"主线程与工作线程的分工服务器端为了能流畅处理多个客户端链接，一般在某个线程A里面accept新的客户端连接并生成新连接的socket fd，然后将这些新连接的s...","permalink":"/post/转载/高性能服务器框架设计/主线程与工作线程的分工","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"高性能服务器框架设计","slug":"高性能服务器框架设计","count":10,"path":"api/tags/高性能服务器框架设计.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】Reactor模式","uid":"f49eefb0c9add12a3ac803e71934ac10","slug":"转载/高性能服务器框架设计/Reactor模式","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.402Z","comments":true,"path":"api/articles/转载/高性能服务器框架设计/Reactor模式.json","keywords":null,"cover":[],"text":"Reactor模式最近一直在看游双的《高性能Linux服务器编程》一书，下载链接： http://download.csdn.net/detail/analog...","permalink":"/post/转载/高性能服务器框架设计/Reactor模式","photos":[],"count_time":{"symbolsCount":"29k","symbolsTime":"26 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"高性能服务器框架设计","slug":"高性能服务器框架设计","count":10,"path":"api/tags/高性能服务器框架设计.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】C++高性能服务器网络框架设计细节","uid":"51dbd98ea18bf4e97e2efcaab62e6cec","slug":"转载/高性能服务器框架设计/C++高性能服务器网络框架设计细节","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.402Z","comments":true,"path":"api/articles/转载/高性能服务器框架设计/C++高性能服务器网络框架设计细节.json","keywords":null,"cover":null,"text":"C++ 高性能服务器网络框架设计细节这篇文章我们将介绍服务器的开发，并从多个方面探究如何开发一款高性能高并发的服务器程序。需要注意的是一般大型服务器，其复杂程度...","permalink":"/post/转载/高性能服务器框架设计/C++高性能服务器网络框架设计细节","photos":[],"count_time":{"symbolsCount":"52k","symbolsTime":"47 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"高性能服务器框架设计","slug":"高性能服务器框架设计","count":10,"path":"api/tags/高性能服务器框架设计.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】业务数据处理一定要单独开线程吗","uid":"c1e8331f572d9e5ea51efac83edeef24","slug":"转载/高性能服务器框架设计/业务数据处理一定要单独开线程吗","date":"2021-05-06T09:27:48.000Z","updated":"2024-11-11T08:31:26.888Z","comments":true,"path":"api/articles/转载/高性能服务器框架设计/业务数据处理一定要单独开线程吗.json","keywords":null,"cover":[],"text":"业务数据处理一定要单独开线程吗在 《one thread one loop 思想》一文我们介绍了一个 loop 的主要结构一般如下所示： 12345678whi...","permalink":"/post/转载/高性能服务器框架设计/业务数据处理一定要单独开线程吗","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"高性能服务器框架设计","slug":"高性能服务器框架设计","count":10,"path":"api/tags/高性能服务器框架设计.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】libevent源码深度剖析13","uid":"467347dafd8ded07c13ba37241779bf0","slug":"转载/libevent/libevent源码深度剖析13","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.362Z","comments":true,"path":"api/articles/转载/libevent/libevent源码深度剖析13.json","keywords":null,"cover":[],"text":"libevent源码深度剖析13libevent信号处理注意点 前面讲到了 libevent 实现多线程的方法，然而在多线程的环境中注册信号事件，还是有一些情况...","permalink":"/post/转载/libevent/libevent源码深度剖析13","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"libevent","slug":"libevent","count":13,"path":"api/tags/libevent.json"},{"name":"源码解析","slug":"源码解析","count":13,"path":"api/tags/源码解析.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】libevent源码深度剖析12","uid":"6ab33ba5c42af5d08609eb8e6d060470","slug":"转载/libevent/libevent源码深度剖析12","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.354Z","comments":true,"path":"api/articles/转载/libevent/libevent源码深度剖析12.json","keywords":null,"cover":[],"text":"libevent源码深度剖析12让libevent支持多线程 libevent本身不是多线程安全的，在多核的时代，如何能充分利用CPU的能力呢，这一节来说说如何...","permalink":"/post/转载/libevent/libevent源码深度剖析12","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"libevent","slug":"libevent","count":13,"path":"api/tags/libevent.json"},{"name":"源码解析","slug":"源码解析","count":13,"path":"api/tags/源码解析.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】libevent源码深度剖析11","uid":"e1ec444aa92c9259448efee0050b6181","slug":"转载/libevent/libevent源码深度剖析11","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.354Z","comments":true,"path":"api/articles/转载/libevent/libevent源码深度剖析11.json","keywords":null,"cover":null,"text":"libevent源码深度剖析11时间管理 为了支持定时器，libevent必须和系统时间打交道，这一部分的内容也比较简单，主要涉及到时间的加减辅助函数、时间缓存...","permalink":"/post/转载/libevent/libevent源码深度剖析11","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"libevent","slug":"libevent","count":13,"path":"api/tags/libevent.json"},{"name":"源码解析","slug":"源码解析","count":13,"path":"api/tags/源码解析.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】libevent源码深度剖析10","uid":"7d0768b2cfc1e99a9f8dcf0642553217","slug":"转载/libevent/libevent源码深度剖析10","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.353Z","comments":true,"path":"api/articles/转载/libevent/libevent源码深度剖析10.json","keywords":null,"cover":null,"text":"libevent源码深度剖析10支持I/O多路复用技术 libevent的核心是事件驱动、同步非阻塞，为了达到这一目标，必须采用系统提供的I/O多路复用技术，而...","permalink":"/post/转载/libevent/libevent源码深度剖析10","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"libevent","slug":"libevent","count":13,"path":"api/tags/libevent.json"},{"name":"源码解析","slug":"源码解析","count":13,"path":"api/tags/源码解析.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】libevent源码深度剖析09","uid":"3ac2d154bc8f115a96c543f8b70be68b","slug":"转载/libevent/libevent源码深度剖析09","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.352Z","comments":true,"path":"api/articles/转载/libevent/libevent源码深度剖析09.json","keywords":null,"cover":[],"text":"libevent源码深度剖析09集成定时器事件 现在再来详细分析libevent中I/O事件和Timer事件的集成，与Signal相比，Timer事件的集成会直...","permalink":"/post/转载/libevent/libevent源码深度剖析09","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"libevent","slug":"libevent","count":13,"path":"api/tags/libevent.json"},{"name":"源码解析","slug":"源码解析","count":13,"path":"api/tags/源码解析.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】libevent源码深度剖析08","uid":"c96eddcf717cad02fc0a6f9698a4cec4","slug":"转载/libevent/libevent源码深度剖析08","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.352Z","comments":true,"path":"api/articles/转载/libevent/libevent源码深度剖析08.json","keywords":null,"cover":[],"text":"libevent源码深度剖析08集成信号处理 现在我们已经了解了libevent的基本框架：事件管理框架和事件主循环。上节提到了libevent中I/O事件和S...","permalink":"/post/转载/libevent/libevent源码深度剖析08","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"libevent","slug":"libevent","count":13,"path":"api/tags/libevent.json"},{"name":"源码解析","slug":"源码解析","count":13,"path":"api/tags/源码解析.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】libevent源码深度剖析07","uid":"2db59a77cabd819a1426d0628461aab7","slug":"转载/libevent/libevent源码深度剖析07","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.351Z","comments":true,"path":"api/articles/转载/libevent/libevent源码深度剖析07.json","keywords":null,"cover":[],"text":"libevent源码深度剖析07事件主循环 现在我们已经初步了解了libevent的Reactor组件——event_base和事件管理框架，接下来就是libe...","permalink":"/post/转载/libevent/libevent源码深度剖析07","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"libevent","slug":"libevent","count":13,"path":"api/tags/libevent.json"},{"name":"源码解析","slug":"源码解析","count":13,"path":"api/tags/源码解析.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】libevent源码深度剖析06","uid":"1db95bdb6c78dab83e0028f095b96fd6","slug":"转载/libevent/libevent源码深度剖析06","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.350Z","comments":true,"path":"api/articles/转载/libevent/libevent源码深度剖析06.json","keywords":null,"cover":null,"text":"libevent源码深度剖析06初见事件处理框架 前面已经对libevent的事件处理框架和event结构体做了描述，现在是时候剖析libevent对事件的详细...","permalink":"/post/转载/libevent/libevent源码深度剖析06","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"libevent","slug":"libevent","count":13,"path":"api/tags/libevent.json"},{"name":"源码解析","slug":"源码解析","count":13,"path":"api/tags/源码解析.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】libevent源码深度剖析05","uid":"e23144502108769556e4aa73a855e4ee","slug":"转载/libevent/libevent源码深度剖析05","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.341Z","comments":true,"path":"api/articles/转载/libevent/libevent源码深度剖析05.json","keywords":null,"cover":[],"text":"libevent源码深度剖析05libevent的核心：事件event 对事件处理流程有了高层的认识后，本节将详细介绍libevent的核心结构event，以及...","permalink":"/post/转载/libevent/libevent源码深度剖析05","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"libevent","slug":"libevent","count":13,"path":"api/tags/libevent.json"},{"name":"源码解析","slug":"源码解析","count":13,"path":"api/tags/源码解析.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】libevent源码深度剖析04","uid":"21cc3849aa98d79b1da8af8304100d2a","slug":"转载/libevent/libevent源码深度剖析04","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.341Z","comments":true,"path":"api/articles/转载/libevent/libevent源码深度剖析04.json","keywords":null,"cover":null,"text":"libevent源码深度剖析041. 前言详细分析源代码之前，如果能对其代码文件的基本结构有个大概的认识和分类，对于代码的分析将是大有裨益的。本节内容不多，我想...","permalink":"/post/转载/libevent/libevent源码深度剖析04","photos":[],"count_time":{"symbolsCount":935,"symbolsTime":"1 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"libevent","slug":"libevent","count":13,"path":"api/tags/libevent.json"},{"name":"源码解析","slug":"源码解析","count":13,"path":"api/tags/源码解析.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】libevent源码深度剖析03","uid":"dd54cd62e1387361117c63cf12445709","slug":"转载/libevent/libevent源码深度剖析03","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.340Z","comments":true,"path":"api/articles/转载/libevent/libevent源码深度剖析03.json","keywords":null,"cover":[],"text":"libevent源码深度剖析03libevent基本使用场景和事件流程1. 前言学习源代码该从哪里入手？我觉得从程序的基本使用场景和代码的整体处理流程入手是个不...","permalink":"/post/转载/libevent/libevent源码深度剖析03","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"libevent","slug":"libevent","count":13,"path":"api/tags/libevent.json"},{"name":"源码解析","slug":"源码解析","count":13,"path":"api/tags/源码解析.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】libevent源码深度剖析02","uid":"0b2fd1ebe4476d5c0bbc97c748eb6d3b","slug":"转载/libevent/libevent源码深度剖析02","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.340Z","comments":true,"path":"api/articles/转载/libevent/libevent源码深度剖析02.json","keywords":null,"cover":[],"text":"libevent源码深度剖析02Reactor模式 前面讲到，整个libevent本身就是一个Reactor，因此本节将专门对Reactor模式进行必要的介绍，...","permalink":"/post/转载/libevent/libevent源码深度剖析02","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"libevent","slug":"libevent","count":13,"path":"api/tags/libevent.json"},{"name":"源码解析","slug":"源码解析","count":13,"path":"api/tags/源码解析.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】libevent源码深度剖析01","uid":"8ecb216f8fd8194ddd13637de67a4f14","slug":"转载/libevent/libevent源码深度剖析01","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.339Z","comments":true,"path":"api/articles/转载/libevent/libevent源码深度剖析01.json","keywords":null,"cover":null,"text":"libevent源码深度剖析一1. 前言libevent是一个轻量级的开源高性能网络库，使用者众多，研究者更甚，相关文章也不少。写这一系列文章的用意在于，一则分...","permalink":"/post/转载/libevent/libevent源码深度剖析01","photos":[],"count_time":{"symbolsCount":864,"symbolsTime":"1 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"libevent","slug":"libevent","count":13,"path":"api/tags/libevent.json"},{"name":"源码解析","slug":"源码解析","count":13,"path":"api/tags/源码解析.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】详解C++11中的智能指针","uid":"ca4f18d64c449f5b0232c48e6847b463","slug":"转载/cpp/详解C++11中的智能指针","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:21.199Z","comments":true,"path":"api/articles/转载/cpp/详解C++11中的智能指针.json","keywords":null,"cover":[],"text":"详解 C++ 11 中的智能指针C/C++ 语言最为人所诟病的特性之一就是存在内存泄露问题，因此后来的大多数语言都提供了内置内存分配与释放功能，有的甚至干脆对语...","permalink":"/post/转载/cpp/详解C++11中的智能指针","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"学习资料","slug":"学习资料","count":26,"path":"api/tags/学习资料.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】用VisualStudio调试Linux程序","uid":"c1544df243e5ebe89f100e61b30feb98","slug":"转载/cpp/用VisualStudio调试Linux程序","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:21.197Z","comments":true,"path":"api/articles/转载/cpp/用VisualStudio调试Linux程序.json","keywords":null,"cover":[],"text":"用Visual Studio调试Linux程序用Visual Studio调试Linux程序？你真的没看错，这个是真的，不是标题党。当然如果你说VS2015及以...","permalink":"/post/转载/cpp/用VisualStudio调试Linux程序","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"学习资料","slug":"学习资料","count":26,"path":"api/tags/学习资料.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】深入理解CC++中的指针","uid":"171b5e45338b6064c4b33120174da47b","slug":"转载/cpp/深入理解CC++中的指针","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:21.197Z","comments":true,"path":"api/articles/转载/cpp/深入理解CC++中的指针.json","keywords":null,"cover":[],"text":"深入理解C/C++中的指针C和C++中最强大的功能莫过于指针了（pointer），但是对于大多数人尤其是新手来说，指针是一个最容易出错、也最难掌握的概念了。本文...","permalink":"/post/转载/cpp/深入理解CC++中的指针","photos":[],"count_time":{"symbolsCount":"9.4k","symbolsTime":"9 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"学习资料","slug":"学习资料","count":26,"path":"api/tags/学习资料.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】如何成为一名合格的CC++开发者？","uid":"19b943d557ff5766028818e28feaf31f","slug":"转载/cpp/如何成为一名合格的CC++开发者？","date":"2021-05-06T09:27:48.000Z","updated":"2024-11-11T08:31:27.041Z","comments":true,"path":"api/articles/转载/cpp/如何成为一名合格的CC++开发者？.json","keywords":null,"cover":[],"text":"如何成为一名合格的 C/C++ 开发者？写在前面的话在大多数开发或者准开发人员的认识中，C/C++ 是一门非常难的编程语言，很多人知道它的强大，但因为认为“难”...","permalink":"/post/转载/cpp/如何成为一名合格的CC++开发者？","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"学习资料","slug":"学习资料","count":26,"path":"api/tags/学习资料.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】如何使用VisualStudio管理和阅读开源项目代码","uid":"3add2e8130af8265f056561f93db8e22","slug":"转载/cpp/如何使用VisualStudio管理和阅读开源项目代码","date":"2021-05-06T09:27:48.000Z","updated":"2024-11-11T08:31:27.041Z","comments":true,"path":"api/articles/转载/cpp/如何使用VisualStudio管理和阅读开源项目代码.json","keywords":null,"cover":[],"text":"如何使用 Visual Studio 管理和阅读开源项目代码对于 Linux C/C++ 项目，虽然我们在 Linux 系统中使用 gdb 去调试，但是通常情况...","permalink":"/post/转载/cpp/如何使用VisualStudio管理和阅读开源项目代码","photos":[],"count_time":{"symbolsCount":892,"symbolsTime":"1 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"学习资料","slug":"学习资料","count":26,"path":"api/tags/学习资料.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】利用cmake工具生成VisualStudio工程文件","uid":"0e9060ff12875a627166c3e18b56f8f7","slug":"转载/cpp/利用cmake工具生成VisualStudio工程文件","date":"2021-05-06T09:27:48.000Z","updated":"2024-11-11T08:31:27.041Z","comments":true,"path":"api/articles/转载/cpp/利用cmake工具生成VisualStudio工程文件.json","keywords":null,"cover":[],"text":"利用 cmake 工具生成 Visual Studio 工程文件对于习惯了 Visual Studio 强大的管理项目、编码和调试功能的读者来说，在 Linux...","permalink":"/post/转载/cpp/利用cmake工具生成VisualStudio工程文件","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"学习资料","slug":"学习资料","count":26,"path":"api/tags/学习资料.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】你一定要搞明白的C函数调用方式与栈原理","uid":"c9abbbdef4e88dc3f27e1c9bd42d47df","slug":"转载/cpp/你一定要搞明白的C函数调用方式与栈原理","date":"2021-05-06T09:27:48.000Z","updated":"2024-11-11T08:31:27.041Z","comments":true,"path":"api/articles/转载/cpp/你一定要搞明白的C函数调用方式与栈原理.json","keywords":null,"cover":[],"text":"你一定要搞明白的C函数调用方式与栈原理写在前面的话 这绝对不是标题党。而是C/C++开发中你必须要掌握的基础知识，也是高级技术岗位面试中高频题。我真的真的真的希...","permalink":"/post/转载/cpp/你一定要搞明白的C函数调用方式与栈原理","photos":[],"count_time":{"symbolsCount":"9.2k","symbolsTime":"8 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"学习资料","slug":"学习资料","count":26,"path":"api/tags/学习资料.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】不定参数函数实现var_arg系列的宏","uid":"40a7e4f59089c11e355c8f7228d5379e","slug":"转载/cpp/不定参数函数实现var_arg系列的宏","date":"2021-05-06T09:27:48.000Z","updated":"2024-11-11T08:31:27.041Z","comments":true,"path":"api/articles/转载/cpp/不定参数函数实现var_arg系列的宏.json","keywords":null,"cover":[],"text":"不定参数函数实现var_arg系列的宏电驴的源码日志模块有一个叫 DebugLogError 函数，其签名如下： 12//代码位于easyMule-master...","permalink":"/post/转载/cpp/不定参数函数实现var_arg系列的宏","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"学习资料","slug":"学习资料","count":26,"path":"api/tags/学习资料.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】C++必须掌握的pimpl惯用法","uid":"674a06ff970318ba143bc66d58326f5d","slug":"转载/cpp/C++必须掌握的pimpl惯用法","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:21.026Z","comments":true,"path":"api/articles/转载/cpp/C++必须掌握的pimpl惯用法.json","keywords":null,"cover":null,"text":"pimpl 惯用法现在这里有一个名为 CSocketClient 的网络通信类，定义如下： 1234567891011121314151617181920212...","permalink":"/post/转载/cpp/C++必须掌握的pimpl惯用法","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"学习资料","slug":"学习资料","count":26,"path":"api/tags/学习资料.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"【转载】C++17结构化绑定","uid":"7e72488827dc1c1de5e7eda02fcbe24e","slug":"转载/cpp/C++17结构化绑定","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:21.026Z","comments":true,"path":"api/articles/转载/cpp/C++17结构化绑定.json","keywords":null,"cover":null,"text":"C++ 17 结构化绑定stl 的 map 容器很多读者应该都很熟悉，map 容器提供了一个 insert 方法，我们用该方法向 map 中插入元素，但是应该很...","permalink":"/post/转载/cpp/C++17结构化绑定","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"学习资料","slug":"学习资料","count":26,"path":"api/tags/学习资料.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}