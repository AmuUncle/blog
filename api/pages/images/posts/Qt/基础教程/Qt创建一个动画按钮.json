{"title":"Qt创建一个动画按钮","type":"page","uid":"b9a828f0ebf3550baef51eb469864cb8","text":"Qt创建一个动画按钮在这篇博客中，我们将会学习如何通过使用Qt来创建一个动画按钮。我们将会使用QPropertyAnimation类，它可以使我们控制一个对象的任何属性的动画。 第1步 - 创建按钮首先，我们需要创建一个QPushButton对象来表示我们的动画按钮。我们可以使用...","date":"2021-09-28T08:34:06.000Z","updated":"2023-05-19T05:34:19.707Z","comments":true,"path":"api/pages/images/posts/Qt/基础教程/Qt创建一个动画按钮.json","covers":null,"excerpt":"","content":"<h1 id=\"Qt创建一个动画按钮\"><a href=\"#Qt创建一个动画按钮\" class=\"headerlink\" title=\"Qt创建一个动画按钮\"></a>Qt创建一个动画按钮</h1><p>在这篇博客中，我们将会学习如何通过使用Qt来创建一个动画按钮。我们将会使用QPropertyAnimation类，它可以使我们控制一个对象的任何属性的动画。</p>\n<h2 id=\"第1步-创建按钮\"><a href=\"#第1步-创建按钮\" class=\"headerlink\" title=\"第1步 - 创建按钮\"></a>第1步 - 创建按钮</h2><p>首先，我们需要创建一个QPushButton对象来表示我们的动画按钮。我们可以使用以下代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QPushButton *button = <span class=\"keyword\">new</span> <span class=\"built_in\">QPushButton</span>(<span class=\"string\">&quot;Click me&quot;</span>, parent);</span><br></pre></td></tr></table></figure>\n\n<p>这将会创建一个带有“Click me”文本的QPushButton对象，并且将其添加到指定的父QWidget对象中。</p>\n<h2 id=\"第2步-为按钮设置动画属性\"><a href=\"#第2步-为按钮设置动画属性\" class=\"headerlink\" title=\"第2步 - 为按钮设置动画属性\"></a>第2步 - 为按钮设置动画属性</h2><p>接下来，我们需要为按钮设置属性，以便我们可以通过动画来改变它们。在这个例子中，我们将会为按钮的大小和颜色属性设置动画。我们可以使用以下代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QPropertyAnimation *animation = <span class=\"keyword\">new</span> <span class=\"built_in\">QPropertyAnimation</span>(button, <span class=\"string\">&quot;geometry&quot;</span>);</span><br><span class=\"line\">animation-&gt;<span class=\"built_in\">setDuration</span>(<span class=\"number\">1000</span>);</span><br><span class=\"line\">animation-&gt;<span class=\"built_in\">setStartValue</span>(<span class=\"built_in\">QRect</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">100</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\">animation-&gt;<span class=\"built_in\">setEndValue</span>(<span class=\"built_in\">QRect</span>(<span class=\"number\">250</span>, <span class=\"number\">250</span>, <span class=\"number\">200</span>, <span class=\"number\">60</span>));</span><br><span class=\"line\">animation-&gt;<span class=\"built_in\">setEasingCurve</span>(QEasingCurve::InOutQuad);</span><br><span class=\"line\">animation-&gt;<span class=\"built_in\">start</span>();</span><br></pre></td></tr></table></figure>\n\n<p>这里我们创建一个QPropertyAnimation对象，然后将其连接到按钮上，并将其属性设置为几何形状。我们还将动画时长设置为1000毫秒，起始和终止值设置为按钮的初始和最终位置（这里的值是矩形区域，我们可以设置其大小和位置），并且动画曲线设置为QEasingCurve::InOutQuad，以使动画具有平滑的效果。最后我们调用start()函数开始动画。</p>\n<h2 id=\"第3步-运行程序\"><a href=\"#第3步-运行程序\" class=\"headerlink\" title=\"第3步 - 运行程序\"></a>第3步 - 运行程序</h2><p>现在我们可以运行程序，并点击按钮观看它的动画效果啦！完整的Qt程序代码应该如下所示：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QPushButton&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QPropertyAnimation&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QEasingCurve&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">QApplication <span class=\"title\">app</span><span class=\"params\">(argc, argv)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    QWidget *parent = <span class=\"keyword\">new</span> QWidget;</span><br><span class=\"line\">    parent-&gt;<span class=\"built_in\">setFixedSize</span>(<span class=\"number\">500</span>, <span class=\"number\">500</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    QPushButton *button = <span class=\"keyword\">new</span> <span class=\"built_in\">QPushButton</span>(<span class=\"string\">&quot;Click me&quot;</span>, parent);</span><br><span class=\"line\">    button-&gt;<span class=\"built_in\">setGeometry</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">100</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    QPropertyAnimation *animation = <span class=\"keyword\">new</span> <span class=\"built_in\">QPropertyAnimation</span>(button, <span class=\"string\">&quot;geometry&quot;</span>);</span><br><span class=\"line\">    animation-&gt;<span class=\"built_in\">setDuration</span>(<span class=\"number\">1000</span>);</span><br><span class=\"line\">    animation-&gt;<span class=\"built_in\">setStartValue</span>(<span class=\"built_in\">QRect</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">100</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\">    animation-&gt;<span class=\"built_in\">setEndValue</span>(<span class=\"built_in\">QRect</span>(<span class=\"number\">250</span>, <span class=\"number\">250</span>, <span class=\"number\">200</span>, <span class=\"number\">60</span>));</span><br><span class=\"line\">    animation-&gt;<span class=\"built_in\">setEasingCurve</span>(QEasingCurve::InOutQuad);</span><br><span class=\"line\">    animation-&gt;<span class=\"built_in\">start</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    parent-&gt;<span class=\"built_in\">show</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> app.<span class=\"built_in\">exec</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>恭喜你，你已经学会了如何通过Qt创建一个动画按钮！</p>\n","count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Qt%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8A%A8%E7%94%BB%E6%8C%89%E9%92%AE\"><span class=\"toc-text\">Qt创建一个动画按钮</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC1%E6%AD%A5-%E5%88%9B%E5%BB%BA%E6%8C%89%E9%92%AE\"><span class=\"toc-text\">第1步 - 创建按钮</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC2%E6%AD%A5-%E4%B8%BA%E6%8C%89%E9%92%AE%E8%AE%BE%E7%BD%AE%E5%8A%A8%E7%94%BB%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">第2步 - 为按钮设置动画属性</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC3%E6%AD%A5-%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">第3步 - 运行程序</span></a></li></ol></li></ol>","data":[]}