{"title":"VUE前端解决web升级后需要手动刷新浏览器问题","uid":"a6c3990ea6d4db0cb6f4530662b613f2","slug":"WEB/VUE前端解决web升级后需要手动刷新浏览器问题","date":"2022-11-01T08:52:25.000Z","updated":"2023-05-19T05:34:20.565Z","comments":true,"path":"api/articles/WEB/VUE前端解决web升级后需要手动刷新浏览器问题.json","keywords":null,"cover":[],"content":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><ul>\n<li>vue项目后端升级新的index.html及相应js&#x2F;css后，前端已打开web是不感知的，所以在不刷新浏览器的情况下，前端的index.html是不会主动更新，从而造成前后端不一致的问题。</li>\n</ul>\n<h2 id=\"前端方案\"><a href=\"#前端方案\" class=\"headerlink\" title=\"前端方案\"></a>前端方案</h2><ul>\n<li>web每次编译时自动生成一个版本号，并且写入的配置文件中</li>\n<li>每次打包配置文件一起发布</li>\n<li>web在需要的地方检测服务器上的配置文件和当前web的版本号是否一致，若不一致则主动刷新一下界面，或者提示用户刷新等</li>\n</ul>\n<h2 id=\"具体步骤\"><a href=\"#具体步骤\" class=\"headerlink\" title=\"具体步骤\"></a>具体步骤</h2><ul>\n<li><p>修改vue.config.js, 生成版本号，并注入项目中<br><img src=\"/VUE%E5%89%8D%E7%AB%AF%E8%A7%A3%E5%86%B3web%E5%8D%87%E7%BA%A7%E5%90%8E%E9%9C%80%E8%A6%81%E6%89%8B%E5%8A%A8%E5%88%B7%E6%96%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E9%97%AE%E9%A2%98/%E7%94%9F%E6%88%90%E7%89%88%E6%9C%AC%E5%8F%B7.png\" alt=\"生成版本号，并注入项目中\"></p>\n</li>\n<li><p>修改vue.config.js, 生成配置文件，version.json<br><img src=\"/VUE%E5%89%8D%E7%AB%AF%E8%A7%A3%E5%86%B3web%E5%8D%87%E7%BA%A7%E5%90%8E%E9%9C%80%E8%A6%81%E6%89%8B%E5%8A%A8%E5%88%B7%E6%96%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E9%97%AE%E9%A2%98/%E7%94%9F%E6%88%90%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png\" alt=\"生成配置文件，version.json\"></p>\n</li>\n<li><p>完整代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Date</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">Format</span> = <span class=\"keyword\">function</span> (<span class=\"params\">fmt</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> o = &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;M+&quot;</span>: <span class=\"variable language_\">this</span>.<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span>,  <span class=\"comment\">// 月份</span></span><br><span class=\"line\">        <span class=\"string\">&quot;d+&quot;</span>: <span class=\"variable language_\">this</span>.<span class=\"title function_\">getDate</span>(),       <span class=\"comment\">// 日</span></span><br><span class=\"line\">        <span class=\"string\">&quot;h+&quot;</span>: <span class=\"variable language_\">this</span>.<span class=\"title function_\">getHours</span>(),      <span class=\"comment\">// 小时</span></span><br><span class=\"line\">        <span class=\"string\">&quot;m+&quot;</span>: <span class=\"variable language_\">this</span>.<span class=\"title function_\">getMinutes</span>(),    <span class=\"comment\">// 分</span></span><br><span class=\"line\">        <span class=\"string\">&quot;s+&quot;</span>: <span class=\"variable language_\">this</span>.<span class=\"title function_\">getSeconds</span>(),    <span class=\"comment\">// 秒</span></span><br><span class=\"line\">        <span class=\"string\">&quot;q+&quot;</span>: <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((<span class=\"variable language_\">this</span>.<span class=\"title function_\">getMonth</span>() + <span class=\"number\">3</span>) / <span class=\"number\">3</span>), <span class=\"comment\">// 季度</span></span><br><span class=\"line\">        <span class=\"string\">&quot;S&quot;</span>: <span class=\"variable language_\">this</span>.<span class=\"title function_\">getMilliseconds</span>() <span class=\"comment\">// 毫秒</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"regexp\">/(y+)/</span>.<span class=\"title function_\">test</span>(fmt))</span><br><span class=\"line\">        fmt = fmt.<span class=\"title function_\">replace</span>(<span class=\"title class_\">RegExp</span>.<span class=\"property\">$1</span>, (<span class=\"variable language_\">this</span>.<span class=\"title function_\">getFullYear</span>() + <span class=\"string\">&quot;&quot;</span>).<span class=\"title function_\">substr</span>(<span class=\"number\">4</span> - <span class=\"title class_\">RegExp</span>.<span class=\"property\">$1</span>.<span class=\"property\">length</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> k <span class=\"keyword\">in</span> o)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&quot;(&quot;</span> + k + <span class=\"string\">&quot;)&quot;</span>).<span class=\"title function_\">test</span>(fmt)) fmt = fmt.<span class=\"title function_\">replace</span>(<span class=\"title class_\">RegExp</span>.<span class=\"property\">$1</span>, (<span class=\"title class_\">RegExp</span>.<span class=\"property\">$1</span>.<span class=\"property\">length</span> == <span class=\"number\">1</span>) ? (o[k]) : ((<span class=\"string\">&quot;00&quot;</span> + o[k]).<span class=\"title function_\">substr</span>((<span class=\"string\">&quot;&quot;</span> + o[k]).<span class=\"property\">length</span>)));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> fmt;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> myVersion = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title class_\">Format</span>(<span class=\"string\">&#x27;yyyy-MM-dd hh:mm:ss&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">chainWebpack</span>: <span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">        config.<span class=\"property\">resolve</span>.<span class=\"property\">alias</span></span><br><span class=\"line\">        .<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;vue-i18n&#x27;</span>, <span class=\"string\">&#x27;vue-i18n/dist/vue-i18n.cjs.js&#x27;</span>)</span><br><span class=\"line\">        .<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;@&#x27;</span>, path.<span class=\"title function_\">join</span>(__dirname,<span class=\"string\">&#x27;src&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">        config.<span class=\"title function_\">plugin</span>(<span class=\"string\">&#x27;define&#x27;</span>)</span><br><span class=\"line\">        .<span class=\"title function_\">tap</span>(<span class=\"function\"><span class=\"params\">args</span> =&gt;</span> &#123; </span><br><span class=\"line\">            args[<span class=\"number\">0</span>][<span class=\"string\">&#x27;process.env&#x27;</span>].<span class=\"property\">API_CONFIG</span> = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(&#123;</span><br><span class=\"line\">                <span class=\"attr\">WEB_VERSION</span>: myVersion  <span class=\"comment\">//自定义配置web版本号</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> args</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 导入fs模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 调用writeFile()写入内容，如果写入路径的文件找不到，路径正确会自动创建文件</span></span><br><span class=\"line\"><span class=\"comment\">// 注意：writeFile()不会自动创建路径</span></span><br><span class=\"line\"><span class=\"comment\">// 判断是否写入成功</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> ver = &#123;</span><br><span class=\"line\">    <span class=\"attr\">version</span>: myVersion</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fs.<span class=\"title function_\">writeFile</span>(__dirname + <span class=\"string\">&#x27;/public/version.json&#x27;</span>, <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(ver), <span class=\"string\">&#x27;utf-8&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">err</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;写入文件失败&#x27;</span>, err.<span class=\"property\">message</span>)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;写入成功&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在需要的地方请求配置文件，并校验</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">checkWebVersion</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> ver = <span class=\"keyword\">await</span> request.<span class=\"title function_\">get</span>(<span class=\"string\">`/version.json?t=<span class=\"subst\">$&#123;<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()&#125;</span>`</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(ver);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> serverVersion = ver.<span class=\"property\">version</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> localWebVersion = process.<span class=\"property\">env</span>.<span class=\"property\">API_CONFIG</span>.<span class=\"property\">WEB_VERSION</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (localWebVersion &amp;&amp; serverVersion != localWebVersion) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"title function_\">reload</span>();</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>此处为示例，可根据需求修改</li>\n<li>原理上就是获取一下服务器上的web版本号，注意后面加上时间戳</li>\n<li>然后对比当前web版本和服务器上web版本的却别</li>\n<li>若有区别则刷新界面，重新加载web</li>\n<li>此段代码可以加到axio的发送拦截器中，每条请求都校验一次，也可以增加定时器，间隔一定时间去检测，具体根据实际业务来处理</li>\n</ul>\n</li>\n</ul>\n","text":"问题描述 vue项目后端升级新的index.html及相应js/css后，前端已打开web是不感知的，所以在不刷新浏览器的情况下，前端的index.html是不...","permalink":"/post/WEB/VUE前端解决web升级后需要手动刷新浏览器问题","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"前端框架","slug":"前端框架","count":2,"path":"api/categories/前端框架.json"}],"tags":[{"name":"vue","slug":"vue","count":2,"path":"api/tags/vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">问题描述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%AB%AF%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">前端方案</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B7%E4%BD%93%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">具体步骤</span></a></li></ol>","author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Qt编译报错 Parse error at “std“的解决办法","uid":"e715a1b3be6463ce11c263a306ec455e","slug":"Qt/进阶教程/国产化系统Qt编译报错01","date":"2022-11-02T05:42:51.000Z","updated":"2023-05-19T05:34:20.795Z","comments":true,"path":"api/articles/Qt/进阶教程/国产化系统Qt编译报错01.json","keywords":null,"cover":null,"text":" 正文 Qt编译时出现如下报错 /usr/local/Qt-5.10.0/bin/moc -DLINUX -DQT_DEPRECATED_WARNINGS -D...","permalink":"/post/Qt/进阶教程/国产化系统Qt编译报错01","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Qt入门指南","slug":"Qt入门指南","count":3,"path":"api/categories/Qt入门指南.json"},{"name":"国产化操作系统","slug":"国产化操作系统","count":1,"path":"api/categories/国产化操作系统.json"}],"tags":[{"name":"Qt","slug":"Qt","count":59,"path":"api/tags/Qt.json"},{"name":"国产化","slug":"国产化","count":1,"path":"api/tags/国产化.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"TCP四次挥手","uid":"cb8a46bc06540e3038f7697e934b72dc","slug":"其他/TCP四次挥手","date":"2022-11-01T06:59:51.000Z","updated":"2024-11-11T08:35:33.984Z","comments":true,"path":"api/articles/其他/TCP四次挥手.json","keywords":null,"cover":[],"text":" 四次挥手是断开连接的过程，需要双向断开，关于由哪一端先断开连接是没有要求的。通信的两端如果想要断开连接就需要调用 close() 函数，当两端都调用了该函数，...","permalink":"/post/其他/TCP四次挥手","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"网络相关","slug":"网络相关","count":2,"path":"api/categories/网络相关.json"}],"tags":[{"name":"tcp","slug":"tcp","count":2,"path":"api/tags/tcp.json"},{"name":"socket","slug":"socket","count":2,"path":"api/tags/socket.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}