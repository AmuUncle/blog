{"title":"【转载】libevent源码深度剖析01","uid":"8ecb216f8fd8194ddd13637de67a4f14","slug":"转载/libevent/libevent源码深度剖析01","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.339Z","comments":true,"path":"api/articles/转载/libevent/libevent源码深度剖析01.json","keywords":null,"cover":null,"content":"<h1 id=\"libevent源码深度剖析一\"><a href=\"#libevent源码深度剖析一\" class=\"headerlink\" title=\"libevent源码深度剖析一\"></a>libevent源码深度剖析一</h1><h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1. 前言\"></a>1. 前言</h3><p>libevent是一个轻量级的开源高性能网络库，使用者众多，研究者更甚，相关文章也不少。写这一系列文章的用意在于，一则分享心得；二则对libevent代码和设计思想做系统的、更深层次的分析，写出来，也可供后来者参考。</p>\n<p>附带一句：libevent是用<strong>c语言</strong>编写的（大牛们都偏爱c语言哪），而且几乎是无处不函数指针，学习其源代码也需要相当的c语言基础。</p>\n<h3 id=\"2-Libevent简介\"><a href=\"#2-Libevent简介\" class=\"headerlink\" title=\"2. Libevent简介\"></a>2. Libevent简介</h3><p>上来当然要先夸奖啦，libevent 有几个显著的亮点：<br>事件驱动（event-driven），高性能;<br>轻量级，专注于网络，不如ACE那么臃肿庞大；<br>源代码相当精炼、易读；<br>跨平台，支持Windows、Linux、BSD和Mac Os；<br>支持多种I&#x2F;O多路复用技术， epoll、poll、dev&#x2F;poll、select和kqueue等；<br>支持I&#x2F;O，定时器和信号等事件；<br>注册事件优先级；</p>\n<p>libevent已经被广泛的应用，作为底层的网络库；比如memcached、Vomit、Nylon、Netchat等等。<br>libevent当前的最新稳定版是1.4.13；这也是本文参照的版本。</p>\n<h3 id=\"3-学习的好处\"><a href=\"#3-学习的好处\" class=\"headerlink\" title=\"3. 学习的好处\"></a>3. 学习的好处</h3><p>学习libevent有助于提升程序设计功力，除了网络程序设计方面外，libevent的代码里有很多有用的设计技巧和基础数据结构，比如信息隐藏、函数指针、c语言的多态支持、链表和堆等等，都有助于提升自身的程序功力。<br>程序设计不止要了解框架，很多细节之处恰恰也是事关整个系统成败的关键。只对libevent本身的框架大概了解，那或许仅仅是一知半解，不深入代码分析，就难以了解其设计的精巧之处，也就难以为自己所用。</p>\n<p>事实上libevent本身就是一个典型的<strong>Reactor</strong>模型，理解Reactor模式是理解libevent的基石；因此下一节将介绍典型的事件驱动设计模式——Reactor模式。</p>\n<p>参考资料：<br>libevent官方地址: <a href=\"http://monkey.org/~provos/libevent/\">http://monkey.org/~provos/libevent/</a></p>\n","text":"libevent源码深度剖析一1. 前言libevent是一个轻量级的开源高性能网络库，使用者众多，研究者更甚，相关文章也不少。写这一系列文章的用意在于，一则分...","permalink":"/post/转载/libevent/libevent源码深度剖析01","photos":[],"count_time":{"symbolsCount":864,"symbolsTime":"1 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"libevent","slug":"libevent","count":13,"path":"api/tags/libevent.json"},{"name":"源码解析","slug":"源码解析","count":13,"path":"api/tags/源码解析.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#libevent%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90%E4%B8%80\"><span class=\"toc-text\">libevent源码深度剖析一</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">1. 前言</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Libevent%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">2. Libevent简介</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%A5%BD%E5%A4%84\"><span class=\"toc-text\">3. 学习的好处</span></a></li></ol></li></ol></li></ol>","author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"【转载】详解C++11中的智能指针","uid":"ca4f18d64c449f5b0232c48e6847b463","slug":"转载/cpp/详解C++11中的智能指针","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:21.199Z","comments":true,"path":"api/articles/转载/cpp/详解C++11中的智能指针.json","keywords":null,"cover":[],"text":"详解 C++ 11 中的智能指针C/C++ 语言最为人所诟病的特性之一就是存在内存泄露问题，因此后来的大多数语言都提供了内置内存分配与释放功能，有的甚至干脆对语...","permalink":"/post/转载/cpp/详解C++11中的智能指针","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"学习资料","slug":"学习资料","count":26,"path":"api/tags/学习资料.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"【转载】libevent源码深度剖析02","uid":"0b2fd1ebe4476d5c0bbc97c748eb6d3b","slug":"转载/libevent/libevent源码深度剖析02","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.340Z","comments":true,"path":"api/articles/转载/libevent/libevent源码深度剖析02.json","keywords":null,"cover":[],"text":"libevent源码深度剖析02Reactor模式 前面讲到，整个libevent本身就是一个Reactor，因此本节将专门对Reactor模式进行必要的介绍，...","permalink":"/post/转载/libevent/libevent源码深度剖析02","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"c++","slug":"c","count":35,"path":"api/tags/c.json"},{"name":"libevent","slug":"libevent","count":13,"path":"api/tags/libevent.json"},{"name":"源码解析","slug":"源码解析","count":13,"path":"api/tags/源码解析.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}