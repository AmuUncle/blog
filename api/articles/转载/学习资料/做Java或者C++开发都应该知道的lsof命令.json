{"title":"【转载】做Java或者C++开发都应该知道的lsof命令","uid":"a6f27f59fbfda9509fed1c4003d071f5","slug":"转载/学习资料/做Java或者C++开发都应该知道的lsof命令","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.366Z","comments":true,"path":"api/articles/转载/学习资料/做Java或者C++开发都应该知道的lsof命令.json","keywords":null,"cover":[],"content":"<h2 id=\"做-Java-或者-C-开发都应该知道的-lsof-命令\"><a href=\"#做-Java-或者-C-开发都应该知道的-lsof-命令\" class=\"headerlink\" title=\"做 Java 或者 C++ 开发都应该知道的 lsof 命令\"></a>做 Java 或者 C++ 开发都应该知道的 lsof 命令</h2><p><strong>lsof</strong> 命令是 Linux 系统的扩展工具，它的含义是 <strong>l</strong>i<strong>s</strong>t <strong>o</strong>pened <strong>f</strong>iledesciptor （<strong>列出已经打开的文件描述符</strong>），在 Linux 系统中，所有的与资源句柄相关的东西都可以统一抽象成<strong>文件描述符</strong>（filedescriptor，简称 fd）。一个文件句柄是一个 fd，一个 socket 对象也可以称之为 fd 等等。</p>\n<p>默认情况下，系统是不存在这个命令的，你需要安装一下，使用如下命令安装：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install lsof</span><br></pre></td></tr></table></figure>\n\n<p>我们来看一下这个命令的使用效果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">COMMAND     PID   TID    USER   FD      TYPE             DEVICE  SIZE/OFF       NODE NAME</span><br><span class=\"line\">systemd       1          root  cwd       DIR              202,1      4096          2 /</span><br><span class=\"line\">nscd        453   469    nscd    8u  netlink                          0t0      11017 ROUTE</span><br><span class=\"line\">nscd        453   470    nscd  cwd       DIR              202,1      4096          2 /</span><br><span class=\"line\">nscd        453   470    nscd  rtd       DIR              202,1      4096          2 /</span><br><span class=\"line\">nscd        453   470    nscd  txt       REG              202,1    180272     146455 /usr/sbin/nscd</span><br><span class=\"line\">nscd        453   470    nscd  mem       REG              202,1    217032     401548 /var/db/nscd/hosts</span><br><span class=\"line\">nscd        453   470    nscd  mem       REG              202,1     90664     132818 /usr/lib64/libz.so.1.2.7</span><br><span class=\"line\">nscd        453   470    nscd  mem       REG              202,1     68192     133155 /usr/lib64/libbz2.so.1.0.6</span><br><span class=\"line\">nscd        453   470    nscd  mem       REG              202,1    153192     133002 /usr/lib64/liblzma.so.5.0.99</span><br><span class=\"line\">nscd        453   470    nscd  mem       REG              202,1     91496     133088 </span><br><span class=\"line\">nscd        453   471    nscd    5u  a_inode                0,9         0       4796 [eventpoll]</span><br><span class=\"line\">nscd        453   471    nscd    6r      REG              202,1    217032     401548 /var/db/nscd/hosts</span><br><span class=\"line\">nscd        453   471    nscd    7u     unix 0xffff880037497440       0t0      11015 /var/run/nscd/socket</span><br><span class=\"line\">nscd        453   471    nscd    8u  netlink                          0t0      11017 ROUTE</span><br><span class=\"line\">imgserver   611       zhangyl  cwd       DIR              202,1      4096    1059054 /home/zhangyl/flamingoserver</span><br><span class=\"line\">imgserver   611       zhangyl  rtd       DIR              202,1      4096          2 /</span><br><span class=\"line\">imgserver   611       zhangyl  txt       REG              202,1   4788917    1057044 /home/zhangyl/flamingoserver/imgserver</span><br><span class=\"line\">imgserver   611       zhangyl   24u  a_inode                0,9         0       4796 [eventfd]</span><br><span class=\"line\">imgserver   611       zhangyl   25u     IPv4           55707643       0t0        TCP *:commtact-http (LISTEN)</span><br><span class=\"line\">imgserver   611       zhangyl   26r      CHR                1,3       0t0       4800 /dev/null</span><br><span class=\"line\">imgserver   611   613 zhangyl   32w      REG              202,1    131072    2754609 /home/zhangyl/flamingoserver/imgcache/258bfb8945288a117d98d440986d7a03</span><br></pre></td></tr></table></figure>\n\n<p>结果显示中列出了各个进程打开的各种 fd 类型，对于 Uinx Socket，<strong>lsof</strong> 命令会显示出其详细的路径，打开的文件 fd 亦是如此。</p>\n<p>使用 <strong>lsof</strong> 命令有三点需要注意：</p>\n<ul>\n<li><p>默认情况下，<strong>lsof</strong> 的输出比较多，我们可以使用 grep 命令过滤我们想要查看的进程打开的 fd 信息，如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsof -i | grep myapp</span><br></pre></td></tr></table></figure>\n\n<p>或者使用 <strong>lsof -p pid</strong> 也能过滤出指定的进程打开的 fd 信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@iZ238vnojlyZ ~]# lsof -p 26621</span><br><span class=\"line\">COMMAND     PID    USER   FD      TYPE   DEVICE SIZE/OFF    NODE NAME</span><br><span class=\"line\">chatserve 26621 zhangyl  cwd       DIR    202,1     4096 1059054 /home/zhangyl/flamingoserver</span><br><span class=\"line\">chatserve 26621 zhangyl  rtd       DIR    202,1     4096       2 /</span><br><span class=\"line\">chatserve 26621 zhangyl  txt       REG    202,1  8027035 1051942 /home/zhangyl/flamingoserver/chatserver</span><br><span class=\"line\">chatserve 26621 zhangyl  mem       REG    202,1    61928  141417 /usr/lib64/libnss_files-2.17.so</span><br><span class=\"line\">chatserve 26621 zhangyl  mem       REG    202,1    44096  143235 /usr/lib64/librt-2.17.so</span><br><span class=\"line\">chatserve 26621 zhangyl  mem       REG    202,1    19520  137064 /usr/lib64/libdl-2.17.so</span><br><span class=\"line\">chatserve 26621 zhangyl  mem       REG    202,1  2112384  132824 /usr/lib64/libc-2.17.so</span><br><span class=\"line\">chatserve 26621 zhangyl  mem       REG    202,1   142304  132850 /usr/lib64/libpthread-2.17.so</span><br><span class=\"line\">chatserve 26621 zhangyl  mem       REG    202,1    88720  135291 /usr/lib64/libgcc_s-4.8.5-20150702.so.1</span><br><span class=\"line\">chatserve 26621 zhangyl  mem       REG    202,1  1141560  137077 /usr/lib64/libm-2.17.so</span><br><span class=\"line\">chatserve 26621 zhangyl  mem       REG    202,1   999944  140059 /usr/lib64/libstdc++.so.6.0.19</span><br><span class=\"line\">chatserve 26621 zhangyl  mem       REG    202,1  9879756  269001 /usr/lib64/mysql/libmysqlclient.so.20.3.4</span><br><span class=\"line\">chatserve 26621 zhangyl  mem       REG    202,1   164440  133622 /usr/lib64/ld-2.17.so</span><br><span class=\"line\">chatserve 26621 zhangyl    0u      CHR      1,3      0t0    4800 /dev/null</span><br><span class=\"line\">chatserve 26621 zhangyl    1u      CHR      1,3      0t0    4800 /dev/null</span><br><span class=\"line\">chatserve 26621 zhangyl    2u      CHR      1,3      0t0    4800 /dev/null</span><br><span class=\"line\">chatserve 26621 zhangyl    3u  a_inode      0,9        0    4796 [eventpoll]</span><br><span class=\"line\">chatserve 26621 zhangyl    4u  a_inode      0,9        0    4796 [timerfd]</span><br><span class=\"line\">chatserve 26621 zhangyl    5u  a_inode      0,9        0    4796 [eventfd]</span><br><span class=\"line\">chatserve 26621 zhangyl    7u  a_inode      0,9        0    4796 [eventpoll]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>lsof</strong> 命令只能查看到当前用户有权限查看到的进程 fd 信息，对于其没有权限的进程，最右边一列会显示 “<strong>Permission denied</strong>”。如下所示：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sshd      26759          root  cwd   unknown                              /proc/26759/cwd (readlink: Permission denied)</span><br><span class=\"line\">sshd      26759          root  rtd   unknown                              /proc/26759/root (readlink: Permission denied)</span><br><span class=\"line\">sshd      26759          root  txt   unknown                              /proc/26759/exe (readlink: Permission denied)</span><br><span class=\"line\">sshd      26759          root NOFD                                        /proc/26759/fd (opendir: Permission denied)</span><br><span class=\"line\">bash      26761          root  cwd   unknown                              /proc/26761/cwd (readlink: Permission denied)</span><br><span class=\"line\">bash      26761          root  rtd   unknown                              /proc/26761/root (readlink: Permission denied)</span><br><span class=\"line\">bash      26761          root  txt   unknown                              /proc/26761/exe (readlink: Permission denied)</span><br><span class=\"line\">bash      26761          root NOFD                                        /proc/26761/fd (opendir: Permission denied)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>lsof</strong> 命令第一栏进程名在显示的时候，默认显示前 n 个字符，这样如果我们需要显示完整的进程名以方便过滤的话，可以使用 <strong>+c</strong> 选项。用法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#最左侧的程序名最大显示 15 个字符</span><br><span class=\"line\">[zhangyl@iZ238vnojlyZ ~]$ lsof +c 15</span><br></pre></td></tr></table></figure>\n\n<p>当然，如果你设置值太大， <strong>lsof</strong> 便不会采用你设置的最大值，而是使用默认最大值。</p>\n</li>\n</ul>\n<p>上文也介绍了，socket 也是一种 fd，如果需要仅显示系统的网络连接信息，使用的是 <strong>-i</strong> 选项即可，这个选项可以形象地显示出系统当前的出入连接情况：</p>\n<p><img src=\"/../imgs/lsof1.jpeg\"></p>\n<p>看到图中的连接方向了吧？</p>\n<p>当然，和 <strong>netstat</strong> 命令一样，<strong>lsof -i</strong> 默认也会显示 ip 地址和端口号的别名，我们只要使用 <strong>-n</strong> 和 <strong>-P</strong> 选项就能相对应地显示 ip 地址和端口号了，综合起来就是 <strong>lsof -Pni</strong>：</p>\n<p><img src=\"/../imgs/lsof2.webp\"></p>\n","text":"做 Java 或者 C++ 开发都应该知道的 lsof 命令lsof 命令是 Linux 系统的扩展工具，它的含义是 list opened filedesci...","permalink":"/post/转载/学习资料/做Java或者C++开发都应该知道的lsof命令","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"学习资料","slug":"学习资料","count":26,"path":"api/tags/学习资料.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%81%9A-Java-%E6%88%96%E8%80%85-C-%E5%BC%80%E5%8F%91%E9%83%BD%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%84-lsof-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">做 Java 或者 C++ 开发都应该知道的 lsof 命令</span></a></li></ol>","author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"【转载】从抓包的角度分析connect函数的连接过程","uid":"c9d344dfed244a58bff8099c6790dfe5","slug":"转载/学习资料/从抓包的角度分析connect函数的连接过程","date":"2021-05-06T09:27:48.000Z","updated":"2024-11-11T08:31:26.995Z","comments":true,"path":"api/articles/转载/学习资料/从抓包的角度分析connect函数的连接过程.json","keywords":null,"cover":[],"text":"从抓包的角度分析connect()函数的连接过程这篇文章主要是从tcp连接建立的角度来分析客户端程序如何利用connect函数和服务端程序建立tcp连接的，了解...","permalink":"/post/转载/学习资料/从抓包的角度分析connect函数的连接过程","photos":[],"count_time":{"symbolsCount":"6.6k","symbolsTime":"6 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"学习资料","slug":"学习资料","count":26,"path":"api/tags/学习资料.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"【转载】利用telnet命令发电子邮件","uid":"70272bd95bde5e7c3c1990babcaab3a0","slug":"转载/学习资料/利用telnet命令发电子邮件","date":"2021-05-06T09:27:48.000Z","updated":"2023-05-19T05:34:22.395Z","comments":true,"path":"api/articles/转载/学习资料/利用telnet命令发电子邮件.json","keywords":null,"cover":[],"text":"利用 telnet 命令发电子邮件telnet 命令是我们最常用的网络调试命令之一。如果你的机器上还没有安装 telnet 命令，可以使用如下命令安装一下： 1...","permalink":"/post/转载/学习资料/利用telnet命令发电子邮件","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"转载","slug":"转载","count":50,"path":"api/categories/转载.json"}],"tags":[{"name":"学习资料","slug":"学习资料","count":26,"path":"api/tags/学习资料.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}