{"title":"使用Qt进行文件读写操作","uid":"ff14916e39f6b95778b03aff03b57cd4","slug":"Qt/进阶教程/使用Qt进行文件读写操作","date":"2021-10-18T03:34:06.000Z","updated":"2023-05-19T05:34:19.755Z","comments":true,"path":"api/articles/Qt/进阶教程/使用Qt进行文件读写操作.json","keywords":null,"cover":null,"content":"<h1 id=\"使用Qt进行文件读写操作\"><a href=\"#使用Qt进行文件读写操作\" class=\"headerlink\" title=\"使用Qt进行文件读写操作\"></a>使用Qt进行文件读写操作</h1><p>在现代应用程序中，处理文件读写操作是一项非常常见的任务。Qt提供了许多工具来轻松地读写文件。在本文中，我们将介绍如何使用Qt编写文件读写代码。</p>\n<h2 id=\"QFile类\"><a href=\"#QFile类\" class=\"headerlink\" title=\"QFile类\"></a>QFile类</h2><p>QFile是Qt中用于文件读写的核心类之一。要使用它进行读写操作，需要通过创建一个QFile对象来打开文件。例如，要打开一个名为example.txt的文本文件，并将其读入到一个QByteArray中，可以使用以下代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QFile&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QDebug&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">const</span> QString fileName = <span class=\"string\">&quot;example.txt&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">QFile <span class=\"title\">file</span><span class=\"params\">(fileName)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!file.<span class=\"built_in\">open</span>(QIODevice::ReadOnly)) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">qDebug</span>() &lt;&lt; <span class=\"string\">&quot;Failed to open file:&quot;</span> &lt;&lt; fileName;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    QByteArray content = file.<span class=\"built_in\">readAll</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">qDebug</span>() &lt;&lt; <span class=\"string\">&quot;Content of file:&quot;</span> &lt;&lt; fileName &lt;&lt; <span class=\"string\">&quot;:&quot;</span> &lt;&lt; endl &lt;&lt; content;</span><br><span class=\"line\"></span><br><span class=\"line\">    file.<span class=\"built_in\">close</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>要将数据写入文件，可以使用open函数来以写入模式打开文件，然后可以调用write函数，传入要包含在文件中的字节的指针和字节数：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QFile&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QDebug&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">const</span> QString fileName = <span class=\"string\">&quot;example.txt&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">QFile <span class=\"title\">file</span><span class=\"params\">(fileName)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!file.<span class=\"built_in\">open</span>(QIODevice::WriteOnly | QIODevice::Text)) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">qDebug</span>() &lt;&lt; <span class=\"string\">&quot;Failed to open file:&quot;</span> &lt;&lt; fileName;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    QByteArray content = <span class=\"string\">&quot;Hello, world!&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    file.<span class=\"built_in\">write</span>(content);</span><br><span class=\"line\"></span><br><span class=\"line\">    file.<span class=\"built_in\">close</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"QTextStream类\"><a href=\"#QTextStream类\" class=\"headerlink\" title=\"QTextStream类\"></a>QTextStream类</h2><p>QTextStream是Qt中用于文本文件读写的另一个核心类。它可以使用不同的编码，包括UTF-8、UTF-16等。例如，要将内容保存为UTF-8编码的文本文件，可以使用以下代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QFile&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QTextStream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QDebug&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">const</span> QString fileName = <span class=\"string\">&quot;example.txt&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">QFile <span class=\"title\">file</span><span class=\"params\">(fileName)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!file.<span class=\"built_in\">open</span>(QIODevice::WriteOnly | QIODevice::Text)) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">qDebug</span>() &lt;&lt; <span class=\"string\">&quot;Failed to open file:&quot;</span> &lt;&lt; fileName;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">QTextStream <span class=\"title\">out</span><span class=\"params\">(&amp;file)</span></span>;</span><br><span class=\"line\">    out.<span class=\"built_in\">setCodec</span>(<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    out &lt;&lt; <span class=\"string\">&quot;Hello, world!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    file.<span class=\"built_in\">close</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>读取UTF-8编码的文本文件同样简单：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QFile&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QTextStream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QDebug&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">const</span> QString fileName = <span class=\"string\">&quot;example.txt&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">QFile <span class=\"title\">file</span><span class=\"params\">(fileName)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!file.<span class=\"built_in\">open</span>(QIODevice::ReadOnly | QIODevice::Text)) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">qDebug</span>() &lt;&lt; <span class=\"string\">&quot;Failed to open file:&quot;</span> &lt;&lt; fileName;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">QTextStream <span class=\"title\">in</span><span class=\"params\">(&amp;file)</span></span>;</span><br><span class=\"line\">    in.<span class=\"built_in\">setCodec</span>(<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    QString content = in.<span class=\"built_in\">readAll</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">qDebug</span>() &lt;&lt; <span class=\"string\">&quot;Content of file:&quot;</span> &lt;&lt; fileName &lt;&lt; <span class=\"string\">&quot;:&quot;</span> &lt;&lt; endl &lt;&lt; content;</span><br><span class=\"line\"></span><br><span class=\"line\">    file.<span class=\"built_in\">close</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>在Qt中，文件读写操作非常简单。通过使用QFile和QTextStream类，可以轻松地读写各种类型的文件。</p>\n","text":"使用Qt进行文件读写操作在现代应用程序中，处理文件读写操作是一项非常常见的任务。Qt提供了许多工具来轻松地读写文件。在本文中，我们将介绍如何使用Qt编写文件读写...","permalink":"/post/Qt/进阶教程/使用Qt进行文件读写操作","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"Qt进阶教程","slug":"Qt进阶教程","count":23,"path":"api/categories/Qt进阶教程.json"}],"tags":[{"name":"Qt","slug":"Qt","count":59,"path":"api/tags/Qt.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8Qt%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">使用Qt进行文件读写操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#QFile%E7%B1%BB\"><span class=\"toc-text\">QFile类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#QTextStream%E7%B1%BB\"><span class=\"toc-text\">QTextStream类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%93%E8%AE%BA\"><span class=\"toc-text\">结论</span></a></li></ol></li></ol>","author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"使用Qt实现HTTP中GET、POST、PUT、DELETE","uid":"ce4d369535f0325ae64c13ca955fe4c5","slug":"Qt/进阶教程/使用Qt实现HTTP中GET、POST、PUT、DELETE","date":"2021-10-18T03:34:06.000Z","updated":"2023-05-19T05:34:19.754Z","comments":true,"path":"api/articles/Qt/进阶教程/使用Qt实现HTTP中GET、POST、PUT、DELETE.json","keywords":null,"cover":null,"text":"使用Qt实现HTTP中GET、POST、PUT、DELETE在现代的应用程序中，网络连接已成为不可或缺的一部分。这就意味着您必须编写代码来执行各种请求和响应操作...","permalink":"/post/Qt/进阶教程/使用Qt实现HTTP中GET、POST、PUT、DELETE","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"Qt进阶教程","slug":"Qt进阶教程","count":23,"path":"api/categories/Qt进阶教程.json"}],"tags":[{"name":"Qt","slug":"Qt","count":59,"path":"api/tags/Qt.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"使用Qt实现JSON数据的解析和构建","uid":"c11d7ff241d9d77db46fba39f11f66e8","slug":"Qt/进阶教程/使用Qt实现JSON数据的解析和构建","date":"2021-10-14T03:34:06.000Z","updated":"2023-05-19T05:34:19.754Z","comments":true,"path":"api/articles/Qt/进阶教程/使用Qt实现JSON数据的解析和构建.json","keywords":null,"cover":null,"text":"使用Qt实现JSON数据的解析和构建介绍在现代应用程序中，处理JSON数据是一项非常常见的任务。Qt提供了许多工具来轻松地对JSON数据进行解析和构建。在本文中...","permalink":"/post/Qt/进阶教程/使用Qt实现JSON数据的解析和构建","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"Qt进阶教程","slug":"Qt进阶教程","count":23,"path":"api/categories/Qt进阶教程.json"}],"tags":[{"name":"Qt","slug":"Qt","count":59,"path":"api/tags/Qt.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}