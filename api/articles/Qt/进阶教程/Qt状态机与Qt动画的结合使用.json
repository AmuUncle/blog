{"title":"Qt状态机与Qt动画的结合使用","uid":"71fd0f421f976303f8841082c0a437ed","slug":"Qt/进阶教程/Qt状态机与Qt动画的结合使用","date":"2023-05-13T05:46:53.000Z","updated":"2023-05-19T05:34:19.752Z","comments":true,"path":"api/articles/Qt/进阶教程/Qt状态机与Qt动画的结合使用.json","keywords":null,"cover":null,"content":"<h1 id=\"Qt状态机与Qt动画的结合使用\"><a href=\"#Qt状态机与Qt动画的结合使用\" class=\"headerlink\" title=\"Qt状态机与Qt动画的结合使用\"></a>Qt状态机与Qt动画的结合使用</h1><p>Qt是一个流行的跨平台应用程序框架，它可以帮助开发者轻松地创建面向对象的GUI应用程序。Qt框架提供了许多有用的工具和库，其中包括状态机和动画。状态机是一种自动机，用于管理对象的状态转换，而动画则可以使这些状态转换更加流畅和自然。在本文中，我们将探讨如何将Qt状态机与Qt动画结合使用。</p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Qt状态机是一个轻量级的框架，用于管理对象的状态转换。状态机由状态、转换和动作组成。状态表示对象可能处于的状态，转换表示对象从一个状态到另一个状态的转换，而动作是在状态转换期间执行的操作。</p>\n<p>Qt动画是一个库，用于创建动态的用户界面效果。它可以用于创建动画、过渡和其他效果，使应用程序更加生动和吸引人。</p>\n<p>将这两个框架结合使用可以使开发者轻松地创建具有复杂状态转换和动画效果的应用程序。</p>\n<h2 id=\"状态机和动画的结合使用\"><a href=\"#状态机和动画的结合使用\" class=\"headerlink\" title=\"状态机和动画的结合使用\"></a>状态机和动画的结合使用</h2><p>在Qt中，状态机和动画可以很容易地结合使用。在状态转换期间，可以使用动画来使过渡更加平滑和自然。</p>\n<p>例如，假设我们有一个包含两个状态的对象：状态A和状态B。我们希望在对象从状态A转换到状态B时使用动画。我们可以使用以下代码来实现这一点：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建状态机</span></span><br><span class=\"line\">QStateMachine *machine = <span class=\"keyword\">new</span> <span class=\"built_in\">QStateMachine</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建状态A</span></span><br><span class=\"line\">QState *stateA = <span class=\"keyword\">new</span> <span class=\"built_in\">QState</span>(machine);</span><br><span class=\"line\">stateA-&gt;<span class=\"built_in\">assignProperty</span>(object, <span class=\"string\">&quot;x&quot;</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建状态B</span></span><br><span class=\"line\">QState *stateB = <span class=\"keyword\">new</span> <span class=\"built_in\">QState</span>(machine);</span><br><span class=\"line\">stateB-&gt;<span class=\"built_in\">assignProperty</span>(object, <span class=\"string\">&quot;x&quot;</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建转换</span></span><br><span class=\"line\">QAbstractTransition *transition = stateA-&gt;<span class=\"built_in\">addTransition</span>(signal, stateB);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建动画</span></span><br><span class=\"line\">QPropertyAnimation *animation = <span class=\"keyword\">new</span> <span class=\"built_in\">QPropertyAnimation</span>(object, <span class=\"string\">&quot;x&quot;</span>, <span class=\"keyword\">this</span>);</span><br><span class=\"line\">animation-&gt;<span class=\"built_in\">setDuration</span>(<span class=\"number\">1000</span>);</span><br><span class=\"line\">transition-&gt;<span class=\"built_in\">addAnimation</span>(animation);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 启动状态机</span></span><br><span class=\"line\">machine-&gt;<span class=\"built_in\">setInitialState</span>(stateA);</span><br><span class=\"line\">machine-&gt;<span class=\"built_in\">start</span>();</span><br></pre></td></tr></table></figure>\n\n<p>在这个例子中，我们创建了一个包含两个状态的状态机，状态A和状态B。我们还创建了一个信号，当接收到这个信号时，我们希望对象从状态A转换到状态B。我们还创建了一个动画，用于使过渡更加平滑和自然。动画将对象的x属性从0变为100，持续时间为1秒。最后，我们启动了状态机。</p>\n<h2 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h2><p>以下是一个完整的示例代码，演示如何使用Qt状态机和Qt动画结合使用：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QApplication&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QStateMachine&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QState&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QAbstractTransition&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QPushButton&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QPropertyAnimation&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">QApplication <span class=\"title\">app</span><span class=\"params\">(argc, argv)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建一个按钮</span></span><br><span class=\"line\">    <span class=\"function\">QPushButton <span class=\"title\">button</span><span class=\"params\">(<span class=\"string\">&quot;Click me!&quot;</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建状态机</span></span><br><span class=\"line\">    QStateMachine *machine = <span class=\"keyword\">new</span> <span class=\"built_in\">QStateMachine</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建状态A</span></span><br><span class=\"line\">    QState *stateA = <span class=\"keyword\">new</span> <span class=\"built_in\">QState</span>(machine);</span><br><span class=\"line\">    stateA-&gt;<span class=\"built_in\">assignProperty</span>(&amp;button, <span class=\"string\">&quot;text&quot;</span>, <span class=\"string\">&quot;Click me!&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建状态B</span></span><br><span class=\"line\">    QState *stateB = <span class=\"keyword\">new</span> <span class=\"built_in\">QState</span>(machine);</span><br><span class=\"line\">    stateB-&gt;<span class=\"built_in\">assignProperty</span>(&amp;button, <span class=\"string\">&quot;text&quot;</span>, <span class=\"string\">&quot;Hello!&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建转换</span></span><br><span class=\"line\">    QAbstractTransition *transition = stateA-&gt;<span class=\"built_in\">addTransition</span>(&amp;button, <span class=\"built_in\">SIGNAL</span>(<span class=\"built_in\">clicked</span>()), stateB);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建动画</span></span><br><span class=\"line\">    QPropertyAnimation *animation = <span class=\"keyword\">new</span> <span class=\"built_in\">QPropertyAnimation</span>(&amp;button, <span class=\"string\">&quot;geometry&quot;</span>, &amp;button);</span><br><span class=\"line\">    animation-&gt;<span class=\"built_in\">setDuration</span>(<span class=\"number\">1000</span>);</span><br><span class=\"line\">    transition-&gt;<span class=\"built_in\">addAnimation</span>(animation);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 启动状态机</span></span><br><span class=\"line\">    machine-&gt;<span class=\"built_in\">setInitialState</span>(stateA);</span><br><span class=\"line\">    machine-&gt;<span class=\"built_in\">start</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 显示按钮</span></span><br><span class=\"line\">    button.<span class=\"built_in\">setGeometry</span>(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">    button.<span class=\"built_in\">show</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> app.<span class=\"built_in\">exec</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在这个示例中，我们创建了一个按钮，并使用状态机和动画来管理按钮的状态转换。当用户单击按钮时，按钮将从状态A转换到状态B，并使用动画使过渡更加平滑和自然。按钮的文本将从“Click me!”变为“Hello!”。</p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>在本文中，我们介绍了如何将Qt状态机与Qt动画结合使用。状态机可以管理对象的状态转换，而动画可以使这些状态转换更加平滑和自然。通过将这两个框架结合使用，开发者可以轻松地创建具有复杂状态转换和动画效果的应用程序。</p>\n<h1 id=\"Qt状态机与Qt动画一起使用\"><a href=\"#Qt状态机与Qt动画一起使用\" class=\"headerlink\" title=\"Qt状态机与Qt动画一起使用\"></a>Qt状态机与Qt动画一起使用</h1><p>Qt是一个强大的应用程序框架，其中包含了许多有用的工具和库，可以帮助开发者更轻松地构建跨平台的应用程序。在这篇博客中，我们将探讨如何使用Qt状态机和Qt动画来创建更加流畅和交互式的用户界面。</p>\n<h2 id=\"什么是Qt状态机？\"><a href=\"#什么是Qt状态机？\" class=\"headerlink\" title=\"什么是Qt状态机？\"></a>什么是Qt状态机？</h2><p>Qt状态机是一种设计模式，用于管理和控制对象的状态转换。它提供了一种简洁且易于理解的方式来处理状态变化，使得代码更加可维护和可扩展。</p>\n<p>在Qt中，状态机通常由两个主要组件组成：状态和转换。状态表示对象的当前状态，而转换则定义状态之间的关系。当对象接收到某个事件时，状态机会根据当前状态和事件类型执行相应的转换，进而改变对象的状态。</p>\n<p>以下是一个简单的示例，展示了如何在Qt中实现状态机：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义两种状态</span></span><br><span class=\"line\"><span class=\"keyword\">enum</span> <span class=\"title class_\">State</span> &#123;</span><br><span class=\"line\">    IdleState,</span><br><span class=\"line\">    RunningState</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义两种事件</span></span><br><span class=\"line\"><span class=\"keyword\">enum</span> <span class=\"title class_\">Event</span> &#123;</span><br><span class=\"line\">    StartEvent,</span><br><span class=\"line\">    StopEvent</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyObject</span> : <span class=\"keyword\">public</span> QObject &#123;</span><br><span class=\"line\">    Q_OBJECT</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">MyObject</span>(QObject* parent = <span class=\"literal\">nullptr</span>) : <span class=\"built_in\">QObject</span>(parent) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 创建状态机</span></span><br><span class=\"line\">        m_stateMachine = <span class=\"keyword\">new</span> <span class=\"built_in\">QStateMachine</span>(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 创建状态</span></span><br><span class=\"line\">        QState* idleState = <span class=\"keyword\">new</span> <span class=\"built_in\">QState</span>();</span><br><span class=\"line\">        QState* runningState = <span class=\"keyword\">new</span> <span class=\"built_in\">QState</span>();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 将状态添加到状态机中</span></span><br><span class=\"line\">        m_stateMachine-&gt;<span class=\"built_in\">addState</span>(idleState);</span><br><span class=\"line\">        m_stateMachine-&gt;<span class=\"built_in\">addState</span>(runningState);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 创建转换</span></span><br><span class=\"line\">        QSignalTransition* startTransition = <span class=\"keyword\">new</span> <span class=\"built_in\">QSignalTransition</span>(<span class=\"keyword\">this</span>, &amp;MyObject::start);</span><br><span class=\"line\">        QSignalTransition* stopTransition = <span class=\"keyword\">new</span> <span class=\"built_in\">QSignalTransition</span>(<span class=\"keyword\">this</span>, &amp;MyObject::stop);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 定义转换的源状态和目标状态</span></span><br><span class=\"line\">        startTransition-&gt;<span class=\"built_in\">setSourceState</span>(idleState);</span><br><span class=\"line\">        startTransition-&gt;<span class=\"built_in\">setTargetState</span>(runningState);</span><br><span class=\"line\">        </span><br><span class=\"line\">        stopTransition-&gt;<span class=\"built_in\">setSourceState</span>(runningState);</span><br><span class=\"line\">        stopTransition-&gt;<span class=\"built_in\">setTargetState</span>(idleState);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 添加转换到状态机中</span></span><br><span class=\"line\">        idleState-&gt;<span class=\"built_in\">addTransition</span>(startTransition);</span><br><span class=\"line\">        runningState-&gt;<span class=\"built_in\">addTransition</span>(stopTransition);</span><br><span class=\"line\">        </span><br><span class=\"line\">        m_stateMachine-&gt;<span class=\"built_in\">setInitialState</span>(idleState);</span><br><span class=\"line\">        m_stateMachine-&gt;<span class=\"built_in\">start</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">signals:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">start</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">stop</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    QStateMachine* m_stateMachine;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>在上面的示例中，我们创建了一个名为<code>MyObject</code>的类，并实现了一个简单的状态机。该状态机包含两个状态（<code>IdleState</code>和<code>RunningState</code>）和两个事件（<code>StartEvent</code>和<code>StopEvent</code>）。当对象接收到<code>StartEvent</code>事件时，状态机会从<code>IdleState</code>转换到<code>RunningState</code>，当接收到<code>StopEvent</code>事件时，则会从<code>RunningState</code>转换回<code>IdleState</code>。</p>\n<h2 id=\"什么是Qt动画？\"><a href=\"#什么是Qt动画？\" class=\"headerlink\" title=\"什么是Qt动画？\"></a>什么是Qt动画？</h2><p>Qt动画是一种用于创建平滑和动态效果的工具。它允许开发者创建复杂的动画序列，包括缓动效果、透明度变化、旋转和缩放等。</p>\n<p>在Qt中，动画通常由以下组件组成：</p>\n<ul>\n<li><code>QPropertyAnimation</code>：用于控制属性值的动画类。</li>\n<li><code>QEasingCurve</code>：用于定义缓动效果的类。</li>\n<li><code>QSequentialAnimationGroup</code>：用于按顺序播放多个动画的类。</li>\n<li><code>QParallelAnimationGroup</code>：用于同时播放多个动画的类。</li>\n</ul>\n<p>以下是一个简单的示例，展示了如何在Qt中实现动画：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建翻转动画</span></span><br><span class=\"line\">QPropertyAnimation* flipAnimation = <span class=\"keyword\">new</span> <span class=\"built_in\">QPropertyAnimation</span>(myWidget, <span class=\"string\">&quot;rotation&quot;</span>);</span><br><span class=\"line\">flipAnimation-&gt;<span class=\"built_in\">setDuration</span>(<span class=\"number\">500</span>);</span><br><span class=\"line\">flipAnimation-&gt;<span class=\"built_in\">setStartValue</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">flipAnimation-&gt;<span class=\"built_in\">setEndValue</span>(<span class=\"number\">180</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义缓动效果</span></span><br><span class=\"line\"><span class=\"comment\">// 创建缓动效果</span></span><br><span class=\"line\"><span class=\"function\">QEasingCurve <span class=\"title\">easeInCubic</span><span class=\"params\">(QEasingCurve::InCubic)</span></span>;</span><br><span class=\"line\">flipAnimation-&gt;<span class=\"built_in\">setEasingCurve</span>(easeInCubic);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建平移动画</span></span><br><span class=\"line\">QPropertyAnimation* translateAnimation = <span class=\"keyword\">new</span> <span class=\"built_in\">QPropertyAnimation</span>(myWidget, <span class=\"string\">&quot;pos&quot;</span>);</span><br><span class=\"line\">translateAnimation-&gt;<span class=\"built_in\">setDuration</span>(<span class=\"number\">1000</span>);</span><br><span class=\"line\">translateAnimation-&gt;<span class=\"built_in\">setStartValue</span>(<span class=\"built_in\">QPoint</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">translateAnimation-&gt;<span class=\"built_in\">setEndValue</span>(<span class=\"built_in\">QPoint</span>(<span class=\"number\">100</span>, <span class=\"number\">100</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义并行动画组</span></span><br><span class=\"line\">QParallelAnimationGroup* animationGroup = <span class=\"keyword\">new</span> <span class=\"built_in\">QParallelAnimationGroup</span>();</span><br><span class=\"line\">animationGroup-&gt;<span class=\"built_in\">addAnimation</span>(flipAnimation);</span><br><span class=\"line\">animationGroup-&gt;<span class=\"built_in\">addAnimation</span>(translateAnimation);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 启动动画组</span></span><br><span class=\"line\">animationGroup-&gt;<span class=\"built_in\">start</span>();</span><br></pre></td></tr></table></figure>\n\n<p>在上面的示例中，我们创建了两个动画：一个旋转动画和一个平移动画。然后，我们将它们添加到一个并行动画组中，并同时启动这两个动画。</p>\n<h2 id=\"将Qt状态机与Qt动画结合使用\"><a href=\"#将Qt状态机与Qt动画结合使用\" class=\"headerlink\" title=\"将Qt状态机与Qt动画结合使用\"></a>将Qt状态机与Qt动画结合使用</h2><p>现在，我们已经了解了如何使用Qt状态机和Qt动画来分别实现状态管理和动画播放。接下来，让我们将它们结合使用，创建一个更加流畅和交互式的用户界面。</p>\n<p>以下是一个示例，展示了如何在Qt中将状态机和动画结合使用：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyObject</span> : <span class=\"keyword\">public</span> QObject &#123;</span><br><span class=\"line\">    Q_OBJECT</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">MyObject</span>(QWidget* parent = <span class=\"literal\">nullptr</span>) : <span class=\"built_in\">QObject</span>(parent) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 创建状态机</span></span><br><span class=\"line\">        m_stateMachine = <span class=\"keyword\">new</span> <span class=\"built_in\">QStateMachine</span>(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 创建状态</span></span><br><span class=\"line\">        QState* idleState = <span class=\"keyword\">new</span> <span class=\"built_in\">QState</span>();</span><br><span class=\"line\">        QState* runningState = <span class=\"keyword\">new</span> <span class=\"built_in\">QState</span>();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 将状态添加到状态机中</span></span><br><span class=\"line\">        m_stateMachine-&gt;<span class=\"built_in\">addState</span>(idleState);</span><br><span class=\"line\">        m_stateMachine-&gt;<span class=\"built_in\">addState</span>(runningState);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 创建转换</span></span><br><span class=\"line\">        QSignalTransition* startTransition = <span class=\"keyword\">new</span> <span class=\"built_in\">QSignalTransition</span>(<span class=\"keyword\">this</span>, &amp;MyObject::start);</span><br><span class=\"line\">        QSignalTransition* stopTransition = <span class=\"keyword\">new</span> <span class=\"built_in\">QSignalTransition</span>(<span class=\"keyword\">this</span>, &amp;MyObject::stop);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 定义转换的源状态和目标状态</span></span><br><span class=\"line\">        startTransition-&gt;<span class=\"built_in\">setSourceState</span>(idleState);</span><br><span class=\"line\">        startTransition-&gt;<span class=\"built_in\">setTargetState</span>(runningState);</span><br><span class=\"line\">        </span><br><span class=\"line\">        stopTransition-&gt;<span class=\"built_in\">setSourceState</span>(runningState);</span><br><span class=\"line\">        stopTransition-&gt;<span class=\"built_in\">setTargetState</span>(idleState);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 添加转换到状态机中</span></span><br><span class=\"line\">        idleState-&gt;<span class=\"built_in\">addTransition</span>(startTransition);</span><br><span class=\"line\">        runningState-&gt;<span class=\"built_in\">addTransition</span>(stopTransition);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 创建旋转动画</span></span><br><span class=\"line\">        QPropertyAnimation* flipAnimation = <span class=\"keyword\">new</span> <span class=\"built_in\">QPropertyAnimation</span>(parent, <span class=\"string\">&quot;rotation&quot;</span>);</span><br><span class=\"line\">        flipAnimation-&gt;<span class=\"built_in\">setDuration</span>(<span class=\"number\">500</span>);</span><br><span class=\"line\">        flipAnimation-&gt;<span class=\"built_in\">setStartValue</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">        flipAnimation-&gt;<span class=\"built_in\">setEndValue</span>(<span class=\"number\">180</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 定义缓动效果</span></span><br><span class=\"line\">        <span class=\"function\">QEasingCurve <span class=\"title\">easeInCubic</span><span class=\"params\">(QEasingCurve::InCubic)</span></span>;</span><br><span class=\"line\">        flipAnimation-&gt;<span class=\"built_in\">setEasingCurve</span>(easeInCubic);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 创建平移动画</span></span><br><span class=\"line\">        QPropertyAnimation* translateAnimation = <span class=\"keyword\">new</span> <span class=\"built_in\">QPropertyAnimation</span>(parent, <span class=\"string\">&quot;pos&quot;</span>);</span><br><span class=\"line\">        translateAnimation-&gt;<span class=\"built_in\">setDuration</span>(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        translateAnimation-&gt;<span class=\"built_in\">setStartValue</span>(<span class=\"built_in\">QPoint</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">        translateAnimation-&gt;<span class=\"built_in\">setEndValue</span>(<span class=\"built_in\">QPoint</span>(<span class=\"number\">100</span>, <span class=\"number\">100</span>));</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 定义并行动画组</span></span><br><span class=\"line\">        QParallelAnimationGroup* animationGroup = <span class=\"keyword\">new</span> <span class=\"built_in\">QParallelAnimationGroup</span>();</span><br><span class=\"line\">        animationGroup-&gt;<span class=\"built_in\">addAnimation</span>(flipAnimation);</span><br><span class=\"line\">        animationGroup-&gt;<span class=\"built_in\">addAnimation</span>(translateAnimation);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 创建状态机动画</span></span><br><span class=\"line\">        QAbstractTransition* runningTransition = runningState-&gt;<span class=\"built_in\">addTransition</span>(animationGroup);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 添加状态机到对象中</span></span><br><span class=\"line\">        m_stateMachine-&gt;<span class=\"built_in\">setInitialState</span>(idleState);</span><br><span class=\"line\">        m_stateMachine-&gt;<span class=\"built_in\">start</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">signals:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">start</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">stop</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    QStateMachine* m_stateMachine;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>在上面的示例中，我们创建了一个名为<code>MyObject</code>的类，并实现了一个将状态机和动画结合使用的示例。该类包含一个状态机和两个信号（<code>start()</code>和<code>stop()</code>）。当对象接收到<code>start()</code>信号时，状态机会从<code>idleState</code>转换到<code>runningState</code>，并同时播放旋转和平移动画；当接收到<code>stop()</code>信号时，则会从<code>runningState</code>转换回<code>idleState</code>。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>Qt状态机和Qt动画是两个非常强大的工具，可以帮助开发者创建更加流畅和交互式的用户界面。通过将它们结合使用，我们可以轻松地管理对象的状态，并同时播放复杂的动画效果。</p>\n<p>在本文中，我们探讨了如何在Qt中实现状态机和动画，以及如何将它们结合使用。通过这些示例代码，您可以更好地理解如何在自己的项目中使用这些功能。</p>\n","text":"Qt状态机与Qt动画的结合使用Qt是一个流行的跨平台应用程序框架，它可以帮助开发者轻松地创建面向对象的GUI应用程序。Qt框架提供了许多有用的工具和库，其中包括...","permalink":"/post/Qt/进阶教程/Qt状态机与Qt动画的结合使用","photos":[],"count_time":{"symbolsCount":"8.6k","symbolsTime":"8 mins."},"categories":[{"name":"Qt进阶教程","slug":"Qt进阶教程","count":23,"path":"api/categories/Qt进阶教程.json"}],"tags":[{"name":"Qt","slug":"Qt","count":59,"path":"api/tags/Qt.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Qt%E7%8A%B6%E6%80%81%E6%9C%BA%E4%B8%8EQt%E5%8A%A8%E7%94%BB%E7%9A%84%E7%BB%93%E5%90%88%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">Qt状态机与Qt动画的结合使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%8A%B6%E6%80%81%E6%9C%BA%E5%92%8C%E5%8A%A8%E7%94%BB%E7%9A%84%E7%BB%93%E5%90%88%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">状态机和动画的结合使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">示例代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%93%E8%AE%BA\"><span class=\"toc-text\">结论</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Qt%E7%8A%B6%E6%80%81%E6%9C%BA%E4%B8%8EQt%E5%8A%A8%E7%94%BB%E4%B8%80%E8%B5%B7%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">Qt状态机与Qt动画一起使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AFQt%E7%8A%B6%E6%80%81%E6%9C%BA%EF%BC%9F\"><span class=\"toc-text\">什么是Qt状态机？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AFQt%E5%8A%A8%E7%94%BB%EF%BC%9F\"><span class=\"toc-text\">什么是Qt动画？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%86Qt%E7%8A%B6%E6%80%81%E6%9C%BA%E4%B8%8EQt%E5%8A%A8%E7%94%BB%E7%BB%93%E5%90%88%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">将Qt状态机与Qt动画结合使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li></ol>","author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"客户端通信安全设计","uid":"47c166aa1551adcab409a420e5d0d7ce","slug":"其他/客户端通信安全设计","date":"2023-05-23T05:29:48.000Z","updated":"2023-06-05T07:26:20.328Z","comments":true,"path":"api/articles/其他/客户端通信安全设计.json","keywords":null,"cover":null,"text":"消息传输方案方案一 公钥加密，私钥解密 握手后，采用对称加密1234567891011sequenceDiagram participant A as 客户端A...","permalink":"/post/其他/客户端通信安全设计","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"其他教程","slug":"其他教程","count":4,"path":"api/categories/其他教程.json"}],"tags":[{"name":"加密","slug":"加密","count":1,"path":"api/tags/加密.json"},{"name":"aes","slug":"aes","count":1,"path":"api/tags/aes.json"},{"name":"rsa","slug":"rsa","count":1,"path":"api/tags/rsa.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"QGraphicsView图形视图框架详解","uid":"ab15d9005aa078928d65bb1db59a3d04","slug":"Qt/进阶教程/QGraphicsView图形视图框架详解","date":"2023-05-13T03:00:12.000Z","updated":"2023-05-19T05:34:19.747Z","comments":true,"path":"api/articles/Qt/进阶教程/QGraphicsView图形视图框架详解.json","keywords":null,"cover":null,"text":"QGraphicsView图形视图框架详解什么是QGraphicsView？QGraphicsView是Qt中的一个图形视图框架，它提供了一种方便的方式来显示和...","permalink":"/post/Qt/进阶教程/QGraphicsView图形视图框架详解","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"Qt进阶教程","slug":"Qt进阶教程","count":23,"path":"api/categories/Qt进阶教程.json"}],"tags":[{"name":"Qt","slug":"Qt","count":59,"path":"api/tags/Qt.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}