{"title":"使用Qt开发一个登录界面","uid":"e9e9c6fb0e1daf8f843d2ec1b3fc2e05","slug":"Qt/基础教程/使用Qt开发一个登录界面","date":"2021-10-04T03:34:06.000Z","updated":"2023-05-19T05:34:19.709Z","comments":true,"path":"api/articles/Qt/基础教程/使用Qt开发一个登录界面.json","keywords":null,"cover":null,"content":"<h1 id=\"使用Qt开发一个登录界面\"><a href=\"#使用Qt开发一个登录界面\" class=\"headerlink\" title=\"使用Qt开发一个登录界面\"></a>使用Qt开发一个登录界面</h1><p>在许多应用程序中，我们需要提供一个登录界面来让用户输入用户名和密码，并验证其身份。在本文中，我们将介绍如何使用Qt创建一个简单的登录界面，并演示如何获取用户输入和执行身份验证操作。</p>\n<h2 id=\"创建登录界面\"><a href=\"#创建登录界面\" class=\"headerlink\" title=\"创建登录界面\"></a>创建登录界面</h2><p>首先，我们需要创建一个QWidget部件，并设置其布局为垂直布局。然后，我们可以向该布局添加两个QLineEdit对象和一个QPushButton对象，以分别创建用户名输入框、密码输入框和登录按钮。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QWidget *loginWidget = <span class=\"keyword\">new</span> <span class=\"built_in\">QWidget</span>();</span><br><span class=\"line\">QVBoxLayout *layout = <span class=\"keyword\">new</span> <span class=\"built_in\">QVBoxLayout</span>(loginWidget);</span><br><span class=\"line\"></span><br><span class=\"line\">QLineEdit *usernameEdit = <span class=\"keyword\">new</span> <span class=\"built_in\">QLineEdit</span>();</span><br><span class=\"line\">QLineEdit *passwordEdit = <span class=\"keyword\">new</span> <span class=\"built_in\">QLineEdit</span>();</span><br><span class=\"line\">passwordEdit-&gt;<span class=\"built_in\">setEchoMode</span>(QLineEdit::Password);</span><br><span class=\"line\">QPushButton *loginButton = <span class=\"keyword\">new</span> <span class=\"built_in\">QPushButton</span>(<span class=\"string\">&quot;Login&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">layout-&gt;<span class=\"built_in\">addWidget</span>(usernameEdit);</span><br><span class=\"line\">layout-&gt;<span class=\"built_in\">addWidget</span>(passwordEdit);</span><br><span class=\"line\">layout-&gt;<span class=\"built_in\">addWidget</span>(loginButton);</span><br></pre></td></tr></table></figure>\n\n<p>请注意，我们在创建密码输入框时，将其回显模式（echo mode）设置为密码模式（Password）。这样做可以隐藏用户输入的实际字符，以保护其安全性。</p>\n<h2 id=\"获取用户输入并执行身份验证操作\"><a href=\"#获取用户输入并执行身份验证操作\" class=\"headerlink\" title=\"获取用户输入并执行身份验证操作\"></a>获取用户输入并执行身份验证操作</h2><p>为了获取用户在用户名和密码输入框中输入的文本，我们需要连接QLineEdit的textChanged()信号，并将其发送到一个槽函数。在该函数中，我们可以获取文本并存储它，以备后续身份验证操作使用。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">connect</span>(usernameEdit, &amp;QLineEdit::textChanged, <span class=\"keyword\">this</span>, &amp;MyClass::onUsernameTextChanged);</span><br><span class=\"line\"><span class=\"built_in\">connect</span>(passwordEdit, &amp;QLineEdit::textChanged, <span class=\"keyword\">this</span>, &amp;MyClass::onPasswordTextChanged);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MyClass::onUsernameTextChanged</span><span class=\"params\">(<span class=\"type\">const</span> QString &amp;text)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    m_username = text;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MyClass::onPasswordTextChanged</span><span class=\"params\">(<span class=\"type\">const</span> QString &amp;text)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    m_password = text;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>要执行身份验证操作，我们只需将QPushButton的clicked()信号连接到一个槽函数即可。在该函数中，我们可以使用存储的用户名和密码信息执行身份验证操作，并根据结果显示相应的消息框（例如成功登录或登录失败）。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">connect</span>(loginButton, &amp;QPushButton::clicked, <span class=\"keyword\">this</span>, &amp;MyClass::onLoginClicked);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MyClass::onLoginClicked</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">bool</span> isAuthenticated = <span class=\"built_in\">authenticate</span>(m_username, m_password);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isAuthenticated) &#123;</span><br><span class=\"line\">        QMessageBox::<span class=\"built_in\">information</span>(<span class=\"keyword\">this</span>, <span class=\"string\">&quot;Success&quot;</span>, <span class=\"string\">&quot;Login succeeded!&quot;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        QMessageBox::<span class=\"built_in\">warning</span>(<span class=\"keyword\">this</span>, <span class=\"string\">&quot;Error&quot;</span>, <span class=\"string\">&quot;Invalid username or password.&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>请注意，我们在此示例中使用了一个authenticate()函数来模拟身份验证操作，返回一个布尔值以指示是否验证成功。实际应用中，我们需要使用更加复杂的身份验证逻辑来保障安全性。</p>\n<h2 id=\"完整代码示例\"><a href=\"#完整代码示例\" class=\"headerlink\" title=\"完整代码示例\"></a>完整代码示例</h2><p>下面是一个完整的代码示例，用于演示如何创建一个登录界面，并获取用户输入和执行身份验证操作：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QApplication&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QWidget&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QVBoxLayout&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QLineEdit&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QPushButton&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QMessageBox&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span> : <span class=\"keyword\">public</span> QWidget</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Q_OBJECT</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">MyClass</span>(QWidget *parent = <span class=\"literal\">nullptr</span>) : <span class=\"built_in\">QWidget</span>(parent)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 创建登录界面</span></span><br><span class=\"line\">        QWidget *loginWidget = <span class=\"keyword\">new</span> <span class=\"built_in\">QWidget</span>();</span><br><span class=\"line\">        QVBoxLayout *layout = <span class=\"keyword\">new</span> <span class=\"built_in\">QVBoxLayout</span>(loginWidget);</span><br><span class=\"line\"></span><br><span class=\"line\">        QLineEdit *usernameEdit = <span class=\"keyword\">new</span> <span class=\"built_in\">QLineEdit</span>();</span><br><span class=\"line\">        QLineEdit *passwordEdit = <span class=\"keyword\">new</span> <span class=\"built_in\">QLineEdit</span>();</span><br><span class=\"line\">        passwordEdit-&gt;<span class=\"built_in\">setEchoMode</span>(QLineEdit::Password);</span><br><span class=\"line\">        QPushButton *loginButton = <span class=\"keyword\">new</span> <span class=\"built_in\">QPushButton</span>(<span class=\"string\">&quot;Login&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        layout-&gt;<span class=\"built_in\">addWidget</span>(usernameEdit);</span><br><span class=\"line\">        layout-&gt;<span class=\"built_in\">addWidget</span>(passwordEdit);</span><br><span class=\"line\">        layout-&gt;<span class=\"built_in\">addWidget</span>(loginButton);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 连接信号和槽函数</span></span><br><span class=\"line\">        <span class=\"built_in\">connect</span>(usernameEdit, &amp;QLineEdit::textChanged, <span class=\"keyword\">this</span>, &amp;MyClass::onUsernameTextChanged);</span><br><span class=\"line\">        <span class=\"built_in\">connect</span>(passwordEdit, &amp;QLineEdit::textChanged, <span class=\"keyword\">this</span>, &amp;MyClass::onPasswordTextChanged);</span><br><span class=\"line\">        <span class=\"built_in\">connect</span>(loginButton, &amp;QPushButton::clicked, <span class=\"keyword\">this</span>, &amp;MyClass::onLoginClicked);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 显示登录界面</span></span><br><span class=\"line\">        <span class=\"built_in\">setLayout</span>(layout);</span><br><span class=\"line\">        <span class=\"built_in\">show</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> slots:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">onUsernameTextChanged</span><span class=\"params\">(<span class=\"type\">const</span> QString &amp;text)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        m_username = text;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">onPasswordTextChanged</span><span class=\"params\">(<span class=\"type\">const</span> QString &amp;text)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        m_password = text;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">onLoginClicked</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">bool</span> isAuthenticated = <span class=\"built_in\">authenticate</span>(m_username, m_password);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isAuthenticated) &#123;</span><br><span class=\"line\">            QMessageBox::<span class=\"built_in\">information</span>(<span class=\"keyword\">this</span>, <span class=\"string\">&quot;Success&quot;</span>, <span class=\"string\">&quot;Login succeeded!&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            QMessageBox::<span class=\"built_in\">warning</span>(<span class=\"keyword\">this</span>, <span class=\"string\">&quot;Error&quot;</span>, <span class=\"string\">&quot;Invalid username or password.&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    QString m_username;</span><br><span class=\"line\">    QString m_password;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">authenticate</span><span class=\"params\">(<span class=\"type\">const</span> QString &amp;username, <span class=\"type\">const</span> QString &amp;password)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// <span class=\"doctag\">TODO:</span> 执行身份验证操作</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> username == <span class=\"string\">&quot;admin&quot;</span> &amp;&amp; password == <span class=\"string\">&quot;123456&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">QApplication <span class=\"title\">a</span><span class=\"params\">(argc, argv)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    MyClass myClass;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a.<span class=\"built_in\">exec</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在该代码示例中，我们创建了一个名为MyClass的QWidget子类，用于展示登录界面。在构造函数中，我们创建了用户名输入框、密码输入框和登录按钮，并将它们添加到垂直布局中。然后，我们连接了QLineEdit的textChanged()信号和QPushButton的clicked()信号到相应的槽函数中，以获取用户输入和执行身份验证操作。</p>\n<p>在onLoginClicked()槽函数中，我们使用存储的用户名和密码信息执行身份验证操作，并根据结果显示相应的消息框。在此示例中，我们使用了一个简单的authenticate()函数来模拟身份验证操作，返回一个布尔值以指示是否验证成功。在实际应用中，我们需要使用更加复杂的身份验证逻辑来保障安全性。</p>\n<p>最后，在main()函数中，我们创建了一个MyClass对象，并启动Qt应用程序。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>在本文中，我们介绍了如何使用Qt创建一个简单的登录界面，并演示了如何获取用户输入和执行身份验证操作。通过结合QLineEdit、QPushButton和QMessageBox等组件，我们可以轻松地实现各种交互和事件处理，使得登录界面更加灵活和可扩展。</p>\n<p>在实际应用中，登录界面通常是一个非常关键的界面元素，涉及到身份验证和安全性等多个方面。因此，我们需要仔细考虑安全性和用户体验，以确保登录功能的稳定性和可靠性。</p>\n<p>最后，Qt提供了许多相关的组件和类，如QLineEdit、QPushButton、QMessageBox等，可以方便地创建和管理用户界面元素。结合信号和槽机制，我们可以轻松地实现各种交互和事件处理，使得登录功能更加灵活和可扩展。</p>\n","text":"使用Qt开发一个登录界面在许多应用程序中，我们需要提供一个登录界面来让用户输入用户名和密码，并验证其身份。在本文中，我们将介绍如何使用Qt创建一个简单的登录界面...","permalink":"/post/Qt/基础教程/使用Qt开发一个登录界面","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"Qt基础教程","slug":"Qt基础教程","count":19,"path":"api/categories/Qt基础教程.json"}],"tags":[{"name":"Qt","slug":"Qt","count":59,"path":"api/tags/Qt.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8Qt%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2\"><span class=\"toc-text\">使用Qt开发一个登录界面</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2\"><span class=\"toc-text\">创建登录界面</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5%E5%B9%B6%E6%89%A7%E8%A1%8C%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">获取用户输入并执行身份验证操作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">完整代码示例</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li></ol>","author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"使用Qt开发一个搜索框","uid":"9cd29aa7149344790a81ff29803e94e3","slug":"Qt/基础教程/使用Qt开发一个搜索框","date":"2021-10-04T03:34:06.000Z","updated":"2023-05-19T05:34:19.709Z","comments":true,"path":"api/articles/Qt/基础教程/使用Qt开发一个搜索框.json","keywords":null,"cover":null,"text":"使用Qt开发一个搜索框在许多应用程序中，我们需要提供一个搜索框来让用户快速查找内容。在本文中，我们将介绍如何使用Qt创建一个简单的内嵌式搜索框和搜索按钮，并演示...","permalink":"/post/Qt/基础教程/使用Qt开发一个搜索框","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"Qt基础教程","slug":"Qt基础教程","count":19,"path":"api/categories/Qt基础教程.json"}],"tags":[{"name":"Qt","slug":"Qt","count":59,"path":"api/tags/Qt.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"QGraphicsDropShadowEffect的介绍","uid":"3c79f2443ad6c8142d688bf19c36b2ad","slug":"Qt/进阶教程/QGraphicsDropShadowEffect的介绍","date":"2021-10-04T03:34:06.000Z","updated":"2023-05-19T05:34:19.747Z","comments":true,"path":"api/articles/Qt/进阶教程/QGraphicsDropShadowEffect的介绍.json","keywords":null,"cover":null,"text":"QGraphicsDropShadowEffect的介绍QGraphicsDropShadowEffect是Qt中一个用于添加阴影效果的图形特效类，可以在图形或...","permalink":"/post/Qt/进阶教程/QGraphicsDropShadowEffect的介绍","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"Qt进阶教程","slug":"Qt进阶教程","count":23,"path":"api/categories/Qt进阶教程.json"}],"tags":[{"name":"Qt","slug":"Qt","count":59,"path":"api/tags/Qt.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}