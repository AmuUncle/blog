{"title":"第4节 MFC消息映射机制","uid":"2f4d7dd6c64cb6ac7562ed9535f84aaa","slug":"MFC/第4节-MFC消息映射机制","date":"2017-10-28T15:30:28.000Z","updated":"2023-05-19T05:34:20.890Z","comments":true,"path":"api/articles/MFC/第4节-MFC消息映射机制.json","keywords":null,"cover":[],"content":"<h1 id=\"Windows编程基础–第4节-MFC消息映射机制\"><a href=\"#Windows编程基础–第4节-MFC消息映射机制\" class=\"headerlink\" title=\"Windows编程基础–第4节 MFC消息映射机制\"></a>Windows编程基础–第4节 MFC消息映射机制</h1><p>对于MFC程序最重要的响应机制就是消息映射机制，这节我们就来一起尝试一下MFC的消息映射机制。<br>（操作系统：win10 64位 IDE：vc++ 6.0）<br>1、新建一个MFC对话框项目，参见上节，<br>2、编译代码运行，效果图如下：<br><img src=\"http://img.blog.csdn.net/20171020220853804?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjU1NDkzMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br>3、现在我们删除对话框上的《确定》和《取消》按钮，如图：<br><img src=\"http://img.blog.csdn.net/20171020221041426?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjU1NDkzMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br>4、现在我们添加自己的“OK”和“CANCEL”按钮，接下来我们就来看看“OK”按钮的按下消息是怎么进行处理的？<br><img src=\"http://img.blog.csdn.net/20171020221432827?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjU1NDkzMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br>4、执行View-&gt;Class Wizard,打开类向导；（或者直接用ctrl + W）</p>\n<p>此时就能看到我们创建的对话框，OK按钮，CANCEL按钮对象，点击它们可以看见它们分别的拥有的消息，如图：</p>\n<p><img src=\"http://img.blog.csdn.net/20171020222144280?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjU1NDkzMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br>5、我们选择Cday03Dlg，MESSAGES选择WM_MOUSEMOVE消息，点击Add Function，下部Member function就会出现与WM_MOUSEMOVE对应的OnMouseMove函数，接下来点击Edit Code，编辑OnMouseMove函数的内容：<br><img src=\"http://img.blog.csdn.net/20171020223001512?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjU1NDkzMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br><img src=\"http://img.blog.csdn.net/20171020223015497?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjU1NDkzMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br>6、我们来修改OnMouseMove(UINT nFlags, CPoint point) 函数，参数中point为鼠标的坐标位置，我们可以通过point.x, point.y来获取鼠标的位置，nFlags主要是标志一些控制键是否按下，然后MK_LBUTTON、MK_RBUTTON、MK_CONTROL、MK_SHIFT、MK_MBUTTON 分别对应鼠标左键，右键，CTRL ，SHIFT ，鼠标中间（转轮）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void CDay03Dlg::OnMouseMove(UINT nFlags, CPoint point) </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t// TODO: Add your message handler code here and/or call default</span><br><span class=\"line\">\tCString strText;</span><br><span class=\"line\">\tstrText.Format(&quot;坐标 x = %d ,y = %d &quot;,point.x, point.y);</span><br><span class=\"line\"></span><br><span class=\"line\">\tif (nFlags &amp; MK_LBUTTON)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tstrText += &quot; 鼠标左键DOWN&quot;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tif (nFlags &amp; MK_RBUTTON)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tstrText += &quot; 鼠标右键DOWN&quot;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tif (nFlags &amp; MK_CONTROL)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tstrText += &quot; CTRL DOWN&quot;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tif (nFlags &amp; MK_SHIFT)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tstrText += &quot; SHIFT DOWN&quot;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tif (nFlags &amp; MK_MBUTTON)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tstrText += &quot; MIDBUTTON DOWN&quot;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tSetWindowText(strText);  // 设置对话框标题文本</span><br><span class=\"line\"></span><br><span class=\"line\">\tCDialog::OnMouseMove(nFlags, point);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>效果图：<br><img src=\"http://img.blog.csdn.net/20171020224733563?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjU1NDkzMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"></p>\n<p>7、同样，我们可以通过类向导分别设置“OK”，“CANCEL”按钮的消息触发函数；<br><img src=\"http://img.blog.csdn.net/20171020225549041?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjU1NDkzMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br><img src=\"http://img.blog.csdn.net/20171020225556702?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjU1NDkzMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"><br><img src=\"http://img.blog.csdn.net/20171020225608346?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjU1NDkzMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"></p>\n<p>8、这是我们其实可以看到在day03Dlg.cpp中MESSAGE_MAP总下方就有我们新增的三个MFC消息，并且可以直观的看出是属于哪个控件ID的；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BEGIN_MESSAGE_MAP(CDay03Dlg, CDialog)</span><br><span class=\"line\">\t//&#123;&#123;AFX_MSG_MAP(CDay03Dlg)</span><br><span class=\"line\">\tON_WM_SYSCOMMAND()</span><br><span class=\"line\">\tON_WM_PAINT()</span><br><span class=\"line\">\tON_WM_QUERYDRAGICON()</span><br><span class=\"line\">\tON_WM_MOUSEMOVE()</span><br><span class=\"line\">\tON_BN_CLICKED(IDC_BUTTON_OK, OnButtonOk)</span><br><span class=\"line\">\tON_BN_CLICKED(IDC_BUTTON_CACEL, OnButtonCacel)</span><br><span class=\"line\">\t//&#125;&#125;AFX_MSG_MAP</span><br><span class=\"line\">END_MESSAGE_MAP()</span><br></pre></td></tr></table></figure>\n<p>9、接下来我们切换到day03Dlg.h头文件中，所有afx_msg 开头的都是消息对应的处理函数：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Generated message map functions</span><br><span class=\"line\">//&#123;&#123;AFX_MSG(CDay03Dlg)</span><br><span class=\"line\">afx_msg void OnSysCommand(UINT nID, LPARAM lParam);</span><br><span class=\"line\">afx_msg void OnPaint();</span><br><span class=\"line\">afx_msg HCURSOR OnQueryDragIcon();</span><br><span class=\"line\">afx_msg void OnMouseMove(UINT nFlags, CPoint point);</span><br><span class=\"line\">afx_msg void OnButtonOk();</span><br><span class=\"line\">afx_msg void OnDoubleclickedButtonCacel();</span><br><span class=\"line\">afx_msg void OnButtonCacel();</span><br><span class=\"line\">//&#125;&#125;AFX_MSG</span><br><span class=\"line\">DECLARE_MESSAGE_MAP()</span><br></pre></td></tr></table></figure>\n<p>10、由以上例子可以看出，MFC程序的消息映射机制是创建一个与窗口相关联的派生类，用于消息关联的成员函数来接收和处理窗口的消息。在类向导中选择对应的消息，添加与该消息关联的成员函数来处理该消息，这就是MFC的消息映射机制。具体控件或窗口支持哪些消息及消息对应的函数参数等，请参见MSDN；<br>11、最终效果图：<br><img src=\"http://img.blog.csdn.net/20171020232524462?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjU1NDkzMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"></p>\n<p><a href=\"https://gitee.com/AmuUncle/MFC_CSDN.git\" title=\"项目源码可以访问我的码云来fork\">项目源码可以访问我的码云来fork</a></p>\n","text":"Windows编程基础–第4节 MFC消息映射机制对于MFC程序最重要的响应机制就是消息映射机制，这节我们就来一起尝试一下MFC的消息映射机制。（操作系统：wi...","permalink":"/post/MFC/第4节-MFC消息映射机制","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"MFC从入门到放弃","slug":"MFC从入门到放弃","count":15,"path":"api/categories/MFC从入门到放弃.json"}],"tags":[{"name":"MFC","slug":"MFC","count":15,"path":"api/tags/MFC.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Windows%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%E2%80%93%E7%AC%AC4%E8%8A%82-MFC%E6%B6%88%E6%81%AF%E6%98%A0%E5%B0%84%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">Windows编程基础–第4节 MFC消息映射机制</span></a></li></ol>","author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"第5节 MFC对话框程序","uid":"d41da3519676c2875183fa7ba0389f75","slug":"MFC/第5节-MFC对话框程序","date":"2017-10-28T15:31:35.000Z","updated":"2023-05-19T05:34:20.891Z","comments":true,"path":"api/articles/MFC/第5节-MFC对话框程序.json","keywords":null,"cover":[],"text":"Windows编程基础–第5节 MFC对话框程序模式对话框 对话框程序是MFC最重要的组成部分，也是Visual C++中唯一可以可视化设计的窗口程序，对话框主...","permalink":"/post/MFC/第5节-MFC对话框程序","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"MFC从入门到放弃","slug":"MFC从入门到放弃","count":15,"path":"api/categories/MFC从入门到放弃.json"}],"tags":[{"name":"MFC","slug":"MFC","count":15,"path":"api/tags/MFC.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"第3节 初探MFC","uid":"436629cc87cd5604a8123cfb0e89982f","slug":"MFC/第3节-初探MFC","date":"2017-10-28T15:14:58.000Z","updated":"2023-05-19T05:34:20.890Z","comments":true,"path":"api/articles/MFC/第3节-初探MFC.json","keywords":null,"cover":[],"text":"Windows编程基础–第3节 初探MFC 前言 win32程序属于早期windows软件，已经逐渐被淘汰，但它的设计模式和方法大部分都被MFC所继承，并且MF...","permalink":"/post/MFC/第3节-初探MFC","photos":[],"count_time":{"symbolsCount":"8.9k","symbolsTime":"8 mins."},"categories":[{"name":"MFC从入门到放弃","slug":"MFC从入门到放弃","count":15,"path":"api/categories/MFC从入门到放弃.json"}],"tags":[{"name":"MFC","slug":"MFC","count":15,"path":"api/tags/MFC.json"}],"author":{"name":"阿木大叔","slug":"blog-author","avatar":"/images/base/logo.png","link":"/","description":"坚持code，努力吹牛 <br /> @ <b>gitee：阿木大叔</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}